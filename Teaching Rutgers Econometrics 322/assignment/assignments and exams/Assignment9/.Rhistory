head(df1)
df2 <- read.csv("Dataset_Hetero_2.csv")
head(df2)
linearMod1 <- lm(y ~ x1, data=df1)
summary(linearMod1)
summary(linearMod1)$coef
linearMod1$coefficients
linearMod1$residuals^2
plot(x1,linearMod1$residuals^2 )
linearMod1 <- lm(y ~ x1, data=df3)
summary(linearMod1)
summary(linearMod1)$coef
linearMod1$coefficients
linearMod1$residuals^2
plot(x1,linearMod1$residuals^2 )
linearMod1 <- lm(y ~ x1, data=df4)
summary(linearMod1)
summary(linearMod1)$coef
linearMod1$coefficients
linearMod1$residuals^2
plot(x1,linearMod1$residuals^2 )
linearMod2 <- lm(y ~ x1, data=df2)
summary(linearMod2)
summary(linearMod2)$coef
linearMod2$coefficients
linearMod2$residuals^2
plot(x1,linearMod2$residuals^2  )
linearMod2 <- lm(y ~ x1, data=df2)
Squared_Residual = linearMod2$residuals^2
# Run OLS regression of Squared Residual onto X
linearMod_Residual2 <- lm(Squared_Residual ~ x1)
# Estimate squared Residual by Linear Form
Squared_Residual_Hat = linearMod_Residual2$fitted.values
# Variance Covariance Matrix for the Uncertainty u
Squared_Residual_Hat_vector = as.vector(Squared_Residual_Hat)
Lambda_hat = diag( Squared_Residual_Hat_vector )
# WLS estimator
nrow = length(df2$x1)
X = cbind(rep(1,nrow),df2$x1)
y = df2$y
beta_WLS = solve( t(X) %*% solve(Lambda_hat) %*% X ) %*% t(X)%*% solve(Lambda_hat)  %*% y
round(beta_WLS, digits = 3)
Var_Cov_beta_WLS = solve( t(X) %*% solve(Lambda_hat) %*% X )
Var_beta_WLS = diag(Var_Cov_beta_WLS)
sd_beta_WLS = sqrt(Var_beta_WLS)
round(sd_beta_WLS, digits = 4)
Squared_Residual_vector = as.vector(Squared_Residual)
Lambda_hat = diag( Squared_Residual_vector )
beta_OLS = solve( t(X) %*% X ) %*% t(X) %*% y
beta_OLS
Var_Cov_beta_OLS_HR = solve( t(X) %*% X ) %*% t(X) %*% Lambda_hat %*% X %*% solve( t(X) %*% X )
Var_beta_OLS_HR = diag(Var_Cov_beta_OLS_HR) # Hetero-Rubust variance for beta_OLS
sd_beta_OLS_HR = sqrt(Var_beta_OLS_HR)      # Hetero-Rubust sd for beta_OLS
round(sd_beta_OLS_HR, digits = 3)
setwd("~/Dropbox/Econometrics  R Emprical Analysis/assignment/Assignment10")
df <- read.csv("Guns.csv")
head(df)
setwd("~/Dropbox/Econometrics  R Emprical Analysis/class demo/RClassDemo9_Panel Data")
Fatalities <- read.csv("FatalitiesData.csv", header=TRUE, sep=",")
head(Fatalities)
Fatalities$fatal_rate <- Fatalities$fatal / Fatalities$pop * 10000
head(Fatalities)
Fatalities <- Fatalities[ ,c('state', 'year', 'fatal_rate', 'beertax') ]
head(Fatalities)
OLS_model <- lm(fatal_rate~beertax, data = Fatalities)
summary(OLS_model)
coeftest(OLS_model, vcov. = vcovHC, type = "const")
summary(OLS_model)
coeftest(OLS_model, vcov. = vcovHC, type = "HC0")
par(mgp=c(1 ,0.1,0),mar=c(2.5,2,2,2)+0.3)
plot( Fatalities$beertax , Fatalities$fatal_rate,
xaxt = "n",yaxt = "n",
xlab ="",
ylab = "",
cex =0.5,
ylim = c(0, 4.5),
pch = 1,
col = "steelblue")
axis(1, tck = 0.03, lwd = 0.5, cex.axis=0.5, line = 0 )
axis(2, tck = 0.03, lwd = 0.5, cex.axis=0.5, line = 0 )
title(xlab = "Beer tax",  cex.lab = 1)
title(ylab = "Fatality rate", cex.lab = 1)
title(main = "Traffic Fatality Rates and Beer Taxes", cex.main = 1)
abline(OLS_model, lwd = 1.5, col = 'red' )
Mean_Beertax_EF = aggregate(Fatalities$beertax, by=list(Fatalities$state), FUN=mean)
Mean_Beertax_EF = aggregate(Fatalities$beertax, by=list(Fatalities$state), FUN=mean)
Mean_FatalRate_EF = aggregate(Fatalities$fatal_rate, by=list(Fatalities$state), FUN=mean)
head(Mean_Beertax_EF)
head(Mean_FatalRate_EF)
head(Fatalities)
head(Mean_Beertax_EF)
head(Mean_FatalRate_EF)
head(Fatalities)
Mean_Beertax_EF
Mean_Beertax_EF
colnames(Mean_Beertax_EF) <- c("state", "beertax_Mean_i")
colnames(Mean_FatalRate_EF) <- c("state", "fatal_rate_Mean_i")
Mean_Beertax_EF
head(Fatalities)
Fatalities$beertax_E_demeaned <- with( merge(x = Fatalities, y = Mean_Beertax_EF, by = "state", all.x = TRUE),
beertax - beertax_Mean_i)
Fatalities$fatal_rate_E_demeaned <- with( merge(x = Fatalities, y = Mean_FatalRate_EF, by = "state", all.x = TRUE),
fatal_rate - fatal_rate_Mean_i )
head(Fatalities)
df1 = data.frame(CustomerId = c(1:6), Product = c(rep("Toaster", 3), rep("Radio", 3)))
df2 = data.frame(CustomerId = c(2, 4, 6), State = c(rep("Alabama", 2), rep("Ohio", 1)))
df1
df2
merge(x = df1, y = df2, by = "CustomerId", all.x = TRUE)
#Left Join
merge(x = df1, y = df2, by = "CustomerId", all.x = TRUE)
merge(x = df1, y = df2, by = "CustomerId", all.y = TRUE)
merge(x = df1, y = df2, by = "CustomerId", all = TRUE)
merge(df1, df2)
head(Fatalities)
Panel_Data_Reg_Model = lm(fatal_rate_E_demeaned ~ beertax_E_demeaned, data = Fatalities)
Panel_Data_Reg_Model = lm(fatal_rate_E_demeaned ~ beertax_E_demeaned, data = Fatalities)
summary(Panel_Data_Reg_Model)
coeftest(Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC0")
library(plm)
Software_Panel_Data_Reg_Model <- plm(fatal_rate ~ beertax,
data = Fatalities,
index = c("state", "year"),
model = "within")
coeftest(Software_Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC1")
summary(Panel_Data_Reg_Model)
coeftest(Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC0")
coeftest(Panel_Data_Reg_Model, vcov. = vcovHC, type = "const")
Software_Panel_Data_Reg_Model <- plm(fatal_rate ~ beertax,
data = Fatalities,
index = c("state", "year"),
model = "within")
coeftest(Software_Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC1")
Software_Panel_Data_Reg_Model <- plm(fatal_rate ~ beertax,
data = Fatalities,
index = c("state", "year"),
model = "within")
coeftest(Software_Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC1")
Panel_Data_Reg_Model$coefficients
Software_Panel_Data_Reg_Model$coefficients
Mean_Beertax_TF = aggregate(Fatalities$beertax, by=list(Fatalities$year), FUN=mean)
Mean_FatalRate_TF = aggregate(Fatalities$fatal_rate, by=list(Fatalities$year), FUN=mean)
head(Mean_Beertax_TF)
head(Mean_Beertax_TF)
colnames(Mean_Beertax_TF) <- c("year", "beertax_Mean_t")
colnames(Mean_FatalRate_TF) <- c("year", "fatal_rate_Mean_t")
Fatalities$beertax_T_demeaned <- with( merge(x = Fatalities, y = Mean_Beertax_TF, by = "year", all.x = TRUE),
beertax - beertax_Mean_t)
Fatalities$fatal_rate_T_demeaned <- with( merge(x = Fatalities, y = Mean_FatalRate_TF, by = "year", all.x = TRUE),
fatal_rate - fatal_rate_Mean_t )
head(Fatalities)
Panel_Data_Reg_Model = lm(fatal_rate_T_demeaned ~ beertax_T_demeaned, data = Fatalities)
summary(Panel_Data_Reg_Model)
coeftest(Panel_Data_Reg_Model, vcov. = vcovHC, type = "const")
coeftest(Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC0")
coeftest(Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC1")
Software_Panel_Data_Reg_Model <- plm(fatal_rate ~ beertax,
data = Fatalities,
index = c("state", "year"),
effect = "time",
model = "within")
coeftest(Software_Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC1")
Panel_Data_Reg_Model$coefficients
Software_Panel_Data_Reg_Model$coefficients
Mean_Beertax_ETF = aggregate(Fatalities$beertax_E_demeaned, by=list(Fatalities$year), FUN=mean)
Mean_FatalRate_ETF = aggregate(Fatalities$fatal_rate_E_demeaned, by=list(Fatalities$year), FUN=mean)
head(Mean_Beertax_ETF)
head(Mean_Beertax_ETF)
colnames(Mean_Beertax_ETF) <- c("year", "beertax_Mean_it")
colnames(Mean_FatalRate_ETF) <- c("year", "fatal_rate_Mean_it")
Fatalities$beertax_ET_demeaned <- with( merge(x = Fatalities, y = Mean_Beertax_ETF, by = "year", all.x = TRUE),
beertax_E_demeaned - beertax_Mean_it)
Fatalities$fatal_rate_ET_demeaned <- with( merge(x = Fatalities, y = Mean_FatalRate_ETF, by = "year", all.x = TRUE),
fatal_rate_E_demeaned - fatal_rate_Mean_it )
# Run OLS with fatal_rate_E_demeaned onto beertax_E_demeaned
Panel_Data_Reg_Model = lm(fatal_rate_ET_demeaned ~ beertax_ET_demeaned, data = Fatalities)
summary(Panel_Data_Reg_Model)
Software_Panel_Data_Reg_Model <- plm(fatal_rate ~ beertax,
data = Fatalities,
index = c("state", "year"),
effect = "twoways",
model = "within")
coeftest(Software_Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC1")
Panel_Data_Reg_Model$coefficients
Software_Panel_Data_Reg_Model$coefficients
setwd("~/Dropbox/Econometrics  R Emprical Analysis/assignment/Assignment10")
df <- read.csv("Guns.csv")
head(df)
is.data.frame(df)
colnames(df)
OLS_model_1 <- lm(log(violent) ~ law, data = df)
summary(OLS_model_1)
Q1 = OLS_model_1$coefficients
round(Q1,digits = 3)
OLS_model_2 <- lm(log(violent) ~ law+prisoners+density+income+population+black+white+male, data = df)
summary(OLS_model_2)
Q2 = OLS_model_2$coefficients
round(Q2,digits = 3)
summary(OLS_model_2)
coeftest(OLS_model, vcov. = vcovHC, type = "const")
coeftest(OLS_model, vcov. = vcovHC, type = "HC0")
coeftest(OLS_model_2, vcov. = vcovHC, type = "const")
coeftest(OLS_model_2, vcov. = vcovHC, type = "HC0")
Q2 = OLS_model_2$coefficients
round(Q2,digits = 3)
OLS_model_2 <- lm(log(violent) ~ law+prisoners+density+income+population+black+white+male, data = df)
summary(OLS_model_2)
coeftest(OLS_model_2, vcov. = vcovHC, type = "const")
coeftest(OLS_model_2, vcov. = vcovHC, type = "HC0")
coeftest(OLS_model_2, vcov. = vcovHC, type = "const")
coeftest(OLS_model_2, vcov. = vcovHC, type = "HC0")
coeftest(OLS_model_2, vcov. = vcovHC, type = "HC0")
coeftest(OLS_model_2, vcov. = vcovHC, type = "HC1")
coeftest(OLS_model_2, vcov. = vcovHC, type = "HC0")
setwd("~/Dropbox/Econometrics  R Emprical Analysis/assignment/Assignment10")
setwd("~/Dropbox/Econometrics  R Emprical Analysis/assignment/Assignment10")
df <- read.csv("Guns.csv")
head(df)
OLS_model_1 <- lm(log(violent) ~ law, data = df)
summary(OLS_model_1)
#Q1
Q1 = OLS_model_1$coefficients
round(Q1,digits = 3)
OLS_model_2 <- lm(log(violent) ~ law+prisoners+density+income+population+black+white+male, data = df)
summary(OLS_model_2)
#Q2
Q2 = OLS_model_2$coefficients
round(Q2,digits = 3)
#Q3
coeftest(OLS_model_2, vcov. = vcovHC, type = "const")
#Q4
library(AER)
round(Q2,digits = 3)
#Q3
coeftest(OLS_model_2, vcov. = vcovHC, type = "const")
coeftest(OLS_model_2, vcov. = vcovHC,type = "HC0")
library(plm)
Software_Panel_Data_Reg_Model <- plm(log(violent) ~ law+prisoners+density+income+population+black+white+male ,
data = df,
index = c("state", "year"),
model = "within")
coeftest(Software_Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC1")
Q6 = Software_Panel_Data_Reg_Model$coefficients
round(Q6,digits = 3)
coeftest(Software_Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC1")
coeftest(Software_Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC1")
coeftest(Software_Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC0")
coeftest(Software_Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC1")
library(plm)
Software_Panel_Data_Reg_Model <- plm(log(violent) ~ law+prisoners+density+income+population+black+white+male ,
data = df,
index = c("state", "year"),
model = "within")
coeftest(Software_Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC0")
coeftest(Software_Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC1")
Q6 = Software_Panel_Data_Reg_Model$coefficients
round(Q6,digits = 3)
Software_Panel_Data_Reg_Model <- plm(log(violent) ~ law+prisoners+density+income+population+black+white+male ,
data = df,
index = c("state", "year"),
effect = "time",
model = "within")
coeftest(Software_Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC0")
Software_Panel_Data_Reg_Model <- plm(log(violent) ~ law+prisoners+density+income+population+black+white+male ,
data = df,
index = c("state", "year"),
effect = "twoways",
model = "within")
coeftest(Software_Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC0")
Software_Panel_Data_Reg_Model <- plm(log(violent) ~ law+prisoners+density+income+population+black+white+male ,
data = df,
index = c("state", "year"),
model = "within")
coeftest(Software_Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC0")
Software_Panel_Data_Reg_Model <- plm(log(violent) ~ law+prisoners+density+income+population+black+white+male ,
data = df,
index = c("state", "year"),
effect = "twoways",
model = "within")
coeftest(Software_Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC0")
Software_Panel_Data_Reg_Model <- plm(log(violent) ~ law+prisoners+density+income+population+black+white+male ,
data = df,
index = c("state", "year"),
model = "within")
coeftest(Software_Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC0")
coeftest(Software_Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC1")
#Q7
Q7 = Software_Panel_Data_Reg_Model$coefficients
round(Q7,digits = 3)
Software_Panel_Data_Reg_Model <- plm(log(violent) ~ law+prisoners+density+income+population+black+white+male ,
data = df,
index = c("state", "year"),
effect = "twoways",
model = "within")
coeftest(Software_Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC0")
Q9 = Software_Panel_Data_Reg_Model$coefficients
round(Q9,digits = 3)
coeftest(Software_Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC0")
coeftest(Software_Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC1")
summary(Software_Panel_Data_Reg_Model)
coeftest(Software_Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC0")
coeftest(Software_Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC1")
summary(Software_Panel_Data_Reg_Model)
coeftest(Software_Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC0")
summary(Software_Panel_Data_Reg_Model)
coeftest(Software_Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC0")
Software_Panel_Data_Reg_Model <- plm(log(violent) ~ law+prisoners+density+income+population+black+white+male ,
data = df,
index = c("state", "year"),
effect = "twoways",
model = "within")
summary(Software_Panel_Data_Reg_Model)
coeftest(Software_Panel_Data_Reg_Model, vcov. = vcovHC, type = "HC0")
library(AER)
head(CigarettesSW)
data("CigarettesSW")
library(AER)
data("CigarettesSW")
head(CigarettesSW)
CigarettesSW <- read.csv("CigarettesSWData.csv", header=TRUE, sep=",")
head(CigarettesSW)
setwd("~/Dropbox/Econometrics  R Emprical Analysis/class demo/RClassDemo10_Instrument Variable Regression")
CigarettesSW <- read.csv("CigarettesSWData.csv", header=TRUE, sep=",")
head(CigarettesSW)
CigarettesSW$rprice <- with(CigarettesSW, price / cpi)
# Create New Instrument Variable: Sales Tax
CigarettesSW$salestax <- with(CigarettesSW, (taxs - tax) / cpi)
# Create New Instrument Variable: Real Income Per Capita
CigarettesSW$rincome <- with(CigarettesSW, income/(population*cpi) )
head(CigarettesSW)
Sig_data <- subset(CigarettesSW, year == "1985")
# Select the columns which will be used in our model
Sig_data <- Sig_data[ ,c('state', 'packs', 'rprice', 'salestax', 'rincome') ]
head(Sig_data)
OLS_model <- lm(log(packs)~log(rprice), data = Sig_data)
summary(OLS_model)
coeftest(OLS_model, vcov. = vcovHC, type = "const")
coeftest(OLS_model, vcov. = vcovHC, type = "HC0")
coeftest(OLS_model, vcov. = vcovHC, type = "HC0")
par(mgp=c(1 ,0.2,1),mar=c(2.5,2,2,2)+0.3)
plot(  log(Sig_data$rprice),  log(Sig_data$packs) ,
#log="y",
xaxt = "n",yaxt = "n",
xlab ="",
ylab = "",
cex =0.5,
#ylim = c(0, 1),
pch = 1,
col = "steelblue")
axis(1, tck = 0.03, lwd = 0.5, cex.axis=0.5, line = 0 )
axis(2, tck = 0.03, lwd = 0.5, cex.axis=0.5, line = 0 )
title(xlab = "Quantity",  cex.lab = 1)
title(ylab = "Price", cex.lab = 1)
title(main = "Cigarettes Market Equilibrium", cex.main = 1)
abline(OLS_model, lwd = 1.5, col = 'red' )
LM_SupCur_1 = lm( log(rprice) ~ log(rincome), data = Sig_data)
coeftest(LM_SupCur_1, vcov. = vcovHC, type = "const")
Sig_data$log_rprice_Hat = LM_SupCur_1$fitted.values
LM_SupCur_2 = lm(log(packs) ~ log_rprice_Hat , data = Sig_data)
coeftest(LM_SupCur_2, vcov. = vcovHC, type = "const")
par(mgp=c(1 ,0.2,1),mar=c(2.5,2,2,2)+0.3)
plot(  log(Sig_data$rprice),  log(Sig_data$packs) ,
#log="y",
xaxt = "n",yaxt = "n",
xlab ="",
ylab = "",
cex =0.5,
#ylim = c(0, 1),
pch = 1,
col = "steelblue")
axis(1, tck = 0.03, lwd = 0.5, cex.axis=0.5, line = 0 )
axis(2, tck = 0.03, lwd = 0.5, cex.axis=0.5, line = 0 )
title(xlab = "Quantity",  cex.lab = 1)
title(ylab = "Price", cex.lab = 1)
title(main = "Cigarettes Market Equilibrium", cex.main = 1)
abline(OLS_model, lwd = 1.5, col = 'red' )
abline(LM_SupCur_2, lwd = 1.5, col = 'blue' )
IV_SupCur <- ivreg(log(packs) ~ log(rprice) | log(rincome), data = Sig_data)
coeftest(IV_SupCur, vcov. = vcovHC, type = "const")
IV_SupCur
LM_SupCur_2
LM_DemCur_1 = lm( log(rprice) ~ salestax, data = Sig_data)
coeftest(LM_DemCur_1, vcov. = vcovHC, type = "const")
Sig_data$log_rprice_Hat = LM_DemCur_1$fitted.values
LM_DemCur_2 = lm(log(packs) ~ log_rprice_Hat , data = Sig_data)
coeftest(LM_DemCur_2, vcov. = vcovHC, type = "const")
par(mgp=c(1 ,0.2,1),mar=c(2.5,2,2,2)+0.3)
plot(  log(Sig_data$rprice),  log(Sig_data$packs) ,
#log="y",
xaxt = "n",yaxt = "n",
xlab ="",
ylab = "",
cex =0.5,
#ylim = c(0, 1),
pch = 1,
col = "steelblue")
axis(1, tck = 0.03, lwd = 0.5, cex.axis=0.5, line = 0 )
axis(2, tck = 0.03, lwd = 0.5, cex.axis=0.5, line = 0 )
title(xlab = "Quantity",  cex.lab = 1)
title(ylab = "Price", cex.lab = 1)
title(main = "Cigarettes Market Equilibrium", cex.main = 1)
abline(OLS_model, lwd = 1.5, col = 'red' )
abline(LM_SupCur_2, lwd = 1.5, col = 'blue' )
abline(LM_DemCur_2, lwd = 1.5, col = 'green' )
IV_DemCur <- ivreg(log(packs) ~ log(rprice) | salestax, data = Sig_data)
coeftest(IV_DemCur, vcov. = vcovHC, type = "const")
IV_DemCur
LM_DemCur_2
IV_DemCur <- ivreg(log(packs) ~ log(rprice) | salestax, data = Sig_data)
coeftest(IV_DemCur, vcov. = vcovHC, type = "const")
pvalue1 = pf(F_Stat, df1,df2, lower.tail = FALSE)
round(pvalue1, digits = 3)
pvalue2 = 1- pf(F_Stat, df1,df2)
round(pvalue2, digits = 3)
setwd("~/Dropbox/Econometrics  R Emprical Analysis/assignment/Assignment9")
df1 <- read.csv("Dataset_Hetero_1.csv")
head(df1)
df3 <- read.csv("Dataset_Hetero_3.csv")
head(df1)
df4 <- read.csv("Dataset_Hetero_4.csv")
head(df1)
df2 <- read.csv("Dataset_Hetero_2.csv")
head(df2)
linearMod1 <- lm(y ~ x1, data=df1)
linearMod1$residuals
linearMod1$residuals^2
linearMod1 <- lm(y ~ x1, data=df1)
summary(linearMod1)
summary(linearMod1)$coef
linearMod1$coefficients
linearMod1$residuals^2
plot(x1,linearMod1$residuals^2 )
x1 = df1$x1
linearMod1 <- lm(y ~ x1, data=df1)
summary(linearMod1)
summary(linearMod1)$coef
linearMod1$coefficients
linearMod1$residuals^2
plot(df1$x1,linearMod1$residuals^2 )
linearMod1 <- lm(y ~ x1, data=df3)
summary(linearMod1)
summary(linearMod1)$coef
linearMod1$coefficients
linearMod1$residuals^2
plot(df3$x1,linearMod1$residuals^2 )
linearMod1 <- lm(y ~ x1, data=df4)
summary(linearMod1)
summary(linearMod1)$coef
linearMod1$coefficients
linearMod1$residuals^2
plot(df4$x1,linearMod1$residuals^2 )
linearMod2 <- lm(y ~ x1, data=df2)
summary(linearMod2)
summary(linearMod2)$coef
linearMod2$coefficients
linearMod2$residuals^2
plot(df2$x1,linearMod2$residuals^2  )
linearMod2 <- lm(y ~ x1, data=df2)
Squared_Residual = linearMod2$residuals^2
# Run OLS regression of Squared Residual onto X
linearMod_Residual2 <- lm(Squared_Residual ~ x1)
# Estimate squared Residual by Linear Form
Squared_Residual_Hat = linearMod_Residual2$fitted.values
# Variance Covariance Matrix for the Uncertainty u
Squared_Residual_Hat_vector = as.vector(Squared_Residual_Hat)
Lambda_hat = diag( Squared_Residual_Hat_vector )
# WLS estimator
nrow = length(df2$x1)
X = cbind(rep(1,nrow),df2$x1)
y = df2$y
beta_WLS = solve( t(X) %*% solve(Lambda_hat) %*% X ) %*% t(X)%*% solve(Lambda_hat)  %*% y
round(beta_WLS, digits = 3)
Var_Cov_beta_OLS_HR = solve( t(X) %*% X ) %*% t(X) %*% Lambda_hat %*% X %*% solve( t(X) %*% X )
diag(Var_Cov_beta_OLS_HR)
Var_beta_OLS_HR = diag(Var_Cov_beta_OLS_HR) # Hetero-Rubust variance for beta_OLS
sd_beta_OLS_HR = sqrt(Var_beta_OLS_HR)      # Hetero-Rubust sd for beta_OLS
round(sd_beta_OLS_HR, digits = 3)
linearMod2 <- lm(y ~ x1, data=df2)
Squared_Residual = linearMod2$residuals^2
# Variance Covariance Matrix for the Uncertainty u
Squared_Residual_vector = as.vector(Squared_Residual)
Lambda_hat = diag( Squared_Residual_vector )
beta_OLS = solve( t(X) %*% X ) %*% t(X) %*% y
beta_OLS
Var_Cov_beta_OLS_HR = solve( t(X) %*% X ) %*% t(X) %*% Lambda_hat %*% X %*% solve( t(X) %*% X )
Var_beta_OLS_HR = diag(Var_Cov_beta_OLS_HR) # Hetero-Rubust variance for beta_OLS
sd_beta_OLS_HR = sqrt(Var_beta_OLS_HR)      # Hetero-Rubust sd for beta_OLS
round(sd_beta_OLS_HR, digits = 3)
df2
setwd("~/Dropbox/Econometrics  R Emprical Analysis/assignment/Assignment9")
df2 <- read.csv("Dataset_Hetero_2.csv")
head(df2)
linearMod2 <- lm(y ~ x1, data=df2)
Squared_Residual = linearMod2$residuals^2
linearMod2 <- lm(y ~ x1, data=df2)
Squared_Residual = linearMod2$residuals^2
# Run OLS regression of Squared Residual onto X
linearMod_Residual2 <- lm(Squared_Residual ~ x1)
# Estimate squared Residual by Linear Form
Squared_Residual_Hat = linearMod_Residual2$fitted.values
linearMod_Residual2 <- lm(Squared_Residual ~ x1, data =df2)
Squared_Residual_Hat = linearMod_Residual2$fitted.values
Squared_Residual_Hat_vector = as.vector(Squared_Residual_Hat)
linearMod2 <- lm(y ~ x1, data=df2)
Lambda_hat
Lambda_hat = diag( Squared_Residual_Hat_vector )
Lambda_hat
nrow = length(df2$x1)
X = cbind(rep(1,nrow),df2$x1)
y = df2$y
beta_WLS = solve( t(X) %*% solve(Lambda_hat) %*% X ) %*% t(X)%*% solve(Lambda_hat)  %*% y
round(beta_WLS, digits = 3)
