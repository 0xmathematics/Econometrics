install.packages(c("boot", "foreign", "KernSmooth", "Matrix", "mgcv", "nlme", "survival"))
library(AER)
install.packages("car")
library(car)
library('car')
install.packages("car", dependencies=TRUE)
library('car')
library(car)
install.packages("pbkrtest")
library(car)
install.packages("car", dependencies=TRUE)
library(AER)
252/12
2^2
py0 = 0.0386+0.0549+0.1018
py1 = 0.1322+0.0202+0.1558
py2 = 0.1768+0.1352+0.1845
#7
E_Y = 0*py0+1*py1+2*py2
E_Square_Y = 0*py0+1^2*py1+2^2*py2
Var_Y = E_Square_Y - E_Y^2
round(Var_Y,digits = 4)
px1 = 0.0386+0.1322+0.1768
px2 = 0.0549+0.0202+0.1352
px3 = 0.1018+0.1558+0.1845
P_X1_con_Y0 = 0.0386/py0
P_X2_con_Y0 = 0.0549/py0
P_X3_con_Y0 = 0.1018/py0
E_X_con_Y0 = 1*P_X1_con_Y0 + 2*P_X2_con_Y0 + 3*P_X3_con_Y0
round(E_X_con_Y0,digits = 4)
0*(0.0386+0.0549+0.1018) + 1*0.1322 + 2*(0.1768+0.0202) + 3*0.1558 + 4*0.1352
+6*0.1845
px1 = 0.0386+0.1322+0.1768
px2 = 0.0549+0.0202+0.1352
px3 = 0.1018+0.1558+0.1845
E_X = 1*px1+2*px2+3*px3
E_Y = 0*py0+1*py1+2*py2
E_Square_Y = 0*py0+1^2*py1+2^2*py2
Var_Y = E_Square_Y - E_Y^2
round(Var_Y,digits = 4)
E_XY = 0*(0.0386+0.0549+0.1018) + 1*0.1322 + 2*(0.1768+0.0202) + 3*0.1558 + 4*0.1352
+6*0.1845
cov_XY = E_XY - E_X*E_Y
round(cov_XY,digits = 4)
E_Xsquare = 1^2 *px1 + 2^2*px2 + 3^2*px3
Var_X = E_Xsquare-E_X^2
round(Var_X, digits = 4)
E_squared_X = 1^2 *px1 + 2^2*px2 + 3^2*px3
Var_X = E_squared_X-E_X^2
round(Var_X, digits = 4)
corr_XY = cov_XY/sqrt(Var_X*Var_Y  )
round(corr_XY,digits = 4)
corr_XY = cov_XY/sqrt(Var_X*Var_Y  )
round(corr_XY,digits = 4)
E_Y = 0*py0+1*py1+2*py2
E_Square_Y = 0*py0+1^2*py1+2^2*py2
Var_Y = E_Square_Y - E_Y^2
round(Var_Y,digits = 4)
corr_XY = cov_XY/sqrt( Var_X*Var_Y )
round(corr_XY,digits = 4)
E_Y
E_Y^2
0*(0.0386+0.0549+0.1018) + 1*0.1322 + 2*(0.1768+0.0202) + 3*0.1558 + 4*0.1352
+6*0.1845
E_Y = 0*py0+1*py1+2*py2
E_Square_Y = 0*py0+1^2*py1+2^2*py2
Var_Y = E_Square_Y - E_Y^2
round(Var_Y,digits = 4)
E_XY = 0*(0.0386+0.0549+0.1018) + 1*0.1322 + 2*(0.1768+0.0202) + 3*0.1558 + 4*0.1352
+6*0.1845
E_XY
0*(0.0386+0.0549+0.1018) + 1*0.1322 + 2*(0.1768+0.0202) + 3*0.1558 + 4*0.1352
+6*0.1845
0*(0.0386+0.0549+0.1018) + 1*0.1322 + 2*(0.1768+0.0202) + 3*0.1558 + 4*0.1352+6*0.1845
E_XY = 0*(0.0386+0.0549+0.1018) + 1*0.1322 + 2*(0.1768+0.0202) + 3*0.1558 + 4*0.1352+6*0.1845
cov_XY = E_XY - E_X*E_Y
round(cov_XY,digits = 4)
E_Y
Var_Y
round(Var_Y,digits = 4)
corr_XY = cov_XY/sqrt( Var_X*Var_Y )
round(corr_XY,digits = 4)
E_XY = 0*(0.0386+0.0549+0.1018) + 1*0.1322 + 2*(0.1768+0.0202) + 3*0.1558 + 4*0.1352+6*0.1845
cov_XY = E_XY - E_X*E_Y
round(cov_XY,digits = 4)
corr_XY = cov_XY/sqrt( Var_X*Var_Y )
round(corr_XY,digits = 4)
corr_XY = cov_XY/sqrt( Var_X*Var_Y )
round(corr_XY,digits = 4)
dtibble <- read_excel("cps08.xlsx", col_types = "numeric")
df = data.frame(dtibble)
head(df)
setwd("~/Dropbox/Econometrics/R Emprical Analysis/class demo/Demo4 Wald Test and F Test")
## load excel file
dtibble <- read_excel("cps08.xlsx", col_types = "numeric")
df = data.frame(dtibble)
head(df)
############################################################################
library('readxl')
dtibble <- read_excel("cps08.xlsx", col_types = "numeric")
df = data.frame(dtibble)
head(df)
head(df)
### matrix method
y = df$ahe
X = df[ , c(3,4,5)]
n = nrow(df)
intercept = rep(1,nrow(df))
X = cbind(intercept,X)
X = as.matrix(X)
y = as.matrix(y)
betaOLS = solve( t(X) %*% X ) %*% t(X) %*% y
SSR = t(y- X %*%betaOLS )%*% (y- X %*%betaOLS )
sigmasqaureHat = SSR/ (n-3-1)
sigmasqaureHat
sigmasqaureHat = as.numeric(sigmasqaureHat)
sigmasqaureHat
VarCovMatrixBetaOLS = sigmasqaureHat * solve(t(X) %*% X)
VarCovMatrixBetaOLS
VarBetaOLS = diag(VarCovMatrixBetaOLS)
sdBetaOLS = sqrt(VarBetaOLS)
VarCovMatrixBetaOLS
linearMod2 <- lm(ahe ~ female+bachelor+age, data=df)
summary(linearMod2)
summary(linearMod2)$coef
df
linearMod2 <- lm(ahe ~ female+bachelor+age, data=df)
linearMod2
linearMod2
summary(linearMod2)
A = cbind(rep(0,3) ,diag(3))
A
a = as.vector(rep(0,3))
a
d
d = 3
d
Wald_Stat = t(A %*% betaOLS-a) %*% solve(sigmasqaureHat*A %*% solve(t(X) %*% X) %*% t(A) ) %*% (A %*% betaOLS-a)
F_Stat = Wald_Stat/d
critical_Value = qchisq(Sig_alpha, df)
Sig_alpha = 0.9
df = d
# Critical Value
critical_Value = qchisq(Sig_alpha, df)
critical_Value
Wald_Stat
Sig_alpha = 0.9
df1 = d
df2 = n-3-1
# Critical Value
critical_Value = qf(Sig_alpha, df1,df2)
critical_Value
# P-Value
pvalue = pf(F_Stat, df1,df2, lower.tail = FALSE)
F_Stat
summary(linearMod2)
setwd("~/Dropbox/Econometrics/R Emprical Analysis/exams/untitled folder")
X = rnorm(1000, 15, 30)
Y = rnorm(2000, 10, 40)
X = data.frame(X)
Y = data.frame(Y)
head(X)
head(Y)
tail(X)
tail(Y)
X <- read.csv("Dataset24_35_X.csv")
Y <- read.csv("Dataset24_35_Y.csv")
nrow(X)
nrow(Y)
x = X[,1]
y = Y[,1]
n = length(x)
n
m = length(y)
m
x_bar = mean(x)
y_bar = mean(y)
x_bar-y_bar
#variance of the estimator
var_mean_Diff = var_x/n+var_y/m
var_mean_Diff
#sd of the estimator
sd_mean_Diff = sqrt(var_mean_Diff)
sd_mean_Diff
#variance of the x
var_x = 30
var_x
#variance of the y
var_y = 40
var_mean_Diff = var_x/n+var_y/m
var_mean_Diff
sd_mean_Diff = sqrt(var_mean_Diff)
sd_mean_Diff
# statistics
z = (x_bar - y_bar )/sd_mean_Diff
z
qnorm(0.95)
# P-value
pnorm(z)
pnorm(z)
cv = qnorm(0.975)
left = x_bar - y_bar - cv*sd_mean_Diff
right = x_bar - y_bar + cv*sd_mean_Diff
CI95 = c(left,right)
round(CI95, digits = 3)
df <- read.csv("Dataset11_23.csv")
x = df[,1]
n = length(x)
x_bar = mean(x)
#variance of the X
var_x = sum((x - x_bar)^2)/(n-1)
var_x
var_x = sum((x - x_bar)^2)/n
var_x = sum((x - x_bar)^2)/n
var_x
df <- read.csv("Dataset11_23.csv")
x = df[,1]
n = length(x)
##############################
## Analysis
##############################
x_bar = mean(x)
#variance of the X
var_x = sum((x - x_bar)^2)/(n-1)
var_x
var_x = sum((x - x_bar)^2)/n
var_x
var_xbar = var_x/n
var_xbar
sd_xbar = sqrt(var_xbar)
sd_xbar
z = (x_bar - 22)/sd_xbar
z
qnorm(0.10)
sd_xbar
var_xbar = var_x/n
var_xbar
n
z
z = (x_bar - 22)/sd_xbar
z
z = (x_bar - 22)/0.01
z
var_xbar
z = (x_bar - 22)/sqrt(0.01)
z
z = (x_bar - 22)/sd_xbar
z
qt(.90)
df <- read.csv("Dataset49_62.csv")
head(df)
n = nrow(df)
y = df[, 1]
X = df[ , c(2,3,4,5)]
n = nrow(df)
intercept = rep(1,nrow(df))
X = cbind(intercept,X)
qt(.90,df=n-4-1)
qt(.90,df=n-4-1)
1-pt(tstat, 35)
tstat = (2.734754-2)/0.2564438
1-pt(tstat, 35)
1-pt(tstat, 35)
left = 2.865166  - cv*0.2564438
right = 2.865166  + cv*0.2564438
CI90 = c(left,right)
round(CI90, digits = 3)
CI90 = c(left,right)
CI90
df <- read.csv("Dataset36_48.csv")
head(df)
y = df[, 1]
X = df[ , c(2,3,4,5)]
n = nrow(df)
intercept = rep(1,nrow(df))
X = cbind(intercept,X)
X = as.matrix(X)
y = as.matrix(y)
betaOLS = solve( t(X) %*% X ) %*% t(X) %*% y
SSR = t(y- X %*%betaOLS )%*% (y- X %*%betaOLS )
sigmasqaureHat = SSR/ (n-4-1)
sigmasqaureHat = as.numeric(sigmasqaureHat)
VarCovMatrixBetaOLS = sigmasqaureHat * solve(t(X) %*% X)
VarBetaOLS = diag(VarCovMatrixBetaOLS)
sdBetaOLS = sqrt(VarBetaOLS)
round(sdBetaOLS, digits = 3)
betaOLS
sdBetaOLS
-1.7269658/0.2816299
-1.7269658/0.2816299
########################
# Assignment4
########################
set.seed(5)
X = rbinom(1000, 40, 0.5)
head(X)
mean(X)
write.csv(X,"Dataset_Assignment4.csv",row.names = FALSE)
setwd("~/Dropbox/Econometrics  R Emprical Analysis/assignment")
set.seed(5)
X = rbinom(1000, 40, 0.5)
head(X)
mean(X)
write.csv(X,"Dataset_Assignment4.csv",row.names = FALSE)
df <- read.csv("Dataset_Assignment4.csv")
df <- read.csv("Dataset_Assignment4.csv")
x = df[,1]
n = length(x)
x_bar = mean(x)
round(x_bar, digits = 3)
df <- read.csv("Dataset_Assignment4.csv")
head(df)
x = df[,1]
x
setwd("~/Dropbox/Econometrics  R Emprical Analysis/assignment/Assignment4")
df <- read.csv("Dataset_Assignment4.csv")
x = df[,1]
n = length(x)
x_bar = mean(x)
x_bar = mean(x)
round(x_bar,digits = 3)
Var_X = 10
n = length(x)
Var_X_bar = 1/n*Var_X
round(Var_X_bar,digits = 3)
n = length(x)
n
Var_X = 10
n = length(x)
Var_X_bar = 1/n*Var_X
round(Var_X_bar,digits = 3)
Sample_Var_x = sum((x - x_bar)^2)/(n-1)
Sample_Var_x
Sample_Var_x = sum((x - x_bar)^2)/n
Sample_Var_x
# Variance of the estimator with unknown Variance parameter
var_xbar = Sample_Var_x/n
var_xbar
sd_xbar = sqrt(var_xbar)
sd_xbar
z = (x_bar - 22)/sqrt(var_xbar)
z
# Q9
z = (x_bar - 22)/sqrt(Var_X_bar)
z
z = (x_bar - 22)/sqrt(Var_X_bar)
round(z, digits = 3)
qnorm(0.10)
q12 = pnorm(z)
round(q12, digits = 3)
cv = qnorm(0.95)
left = x_bar - cv*sd_xbar
right = x_bar + cv*sd_xbar
CI90 = c(left,right)
CI90
cv = qnorm(0.95)
left = x_bar - cv*sd_xbar
right = x_bar + cv*sd_xbar
CI90 = c(left,right)
round(CI90, digits = 3)
##############################
## Generate the dataset
##############################
set.seed(6)
X = rnorm(1000, 15, 30)
Y = rnorm(2000, 10, 40)
X = data.frame(X)
Y = data.frame(Y)
head(X)
head(Y)
tail(X)
tail(Y)
write.csv(X,"Dataset24_35_X.csv",row.names = FALSE)
write.csv(Y,"Dataset24_35_Y.csv",row.names = FALSE)
setwd("~/Dropbox/Econometrics  R Emprical Analysis/assignment/Assignment5")
set.seed(5)
X = rnorm(1000, 15, 30)
Y = rnorm(2000, 10, 40)
X = data.frame(X)
Y = data.frame(Y)
head(X)
head(Y)
tail(X)
tail(Y)
write.csv(X,"Assignment5_X.csv",row.names = FALSE)
write.csv(Y,"Assignment5_Y.csv",row.names = FALSE)
X <- read.csv("Assignment5_X.csv")
Y <- read.csv("Assignment5_Y.csv")
nrow(X)
nrow(Y)
x = X[,1]
y = Y[,1]
n = length(x)
n
m = length(y)
m
x_bar = mean(x)
y_bar = mean(y)
x_bar-y_bar
#variance of the x
var_x = 30
var_x
#variance of the y
var_y = 40
var_y
var_mean_Diff = var_x/n+var_y/m
var_mean_Diff
sd_mean_Diff = sqrt(var_mean_Diff)
sd_mean_Diff
z = (x_bar - y_bar )/sd_mean_Diff
z
qnorm(0.95)
pnorm(z)
cv = qnorm(0.975)
left = x_bar - y_bar - cv*sd_mean_Diff
right = x_bar - y_bar + cv*sd_mean_Diff
CI95 = c(left,right)
round(CI95, digits = 3)
setwd("~/Dropbox/Econometrics  R Emprical Analysis/assignment/Assignment5")
setwd("~/Dropbox/Econometrics  R Emprical Analysis/class demo/RClassDemo3_HypothesisTesting_Pvalue_CI/RClassDemo3c_HypothesisTesting_Pvalue_CI")
df <- read.csv("GDP_Growth_Rate.csv")
head(df)
tail(df)
length(df)
GDP_growthRate <- df$pct_change
head(df)
GDP_growthRate<- GDP_growthRate[2:length(GDP_growthRate)]
GDP_GR_1950 <- GDP_growthRate[70:length(GDP_growthRate)]
length(GDP_GR_1950)
X_bar = mean(GDP_GR_1950)
X_bar
mean(GDP_growthRate)
var(GDP_growthRate)
sqrt( var(GDP_growthRate) )
sqrt( var(GDP_GR_1950) )
sqrt( var(GDP_growthRate) )
sqrt( var(GDP_GR_1950) )
X_bar = mean(GDP_GR_1950)
X_bar
mean(GDP_growthRate)
## asume 0.03
Sigma = 0.035
Sigma = 0.035
X_bar = mean(GDP_growthRate)
X_bar
n = length(GDP_growthRate)
sqrt( var(GDP_growthRate) )
sqrt( var(GDP_GR_1950) )
Sigma = 0.075
X_bar = mean(GDP_growthRate)
X_bar
# Standard deviation of sample mean estimator
sd_X_bar = sqrt( Sigma^2/ n)
Zstat = (X_bar- mu)/ sd_X_bar
Zstat
mu = 0.06
Zstat = (X_bar- mu)/ sd_X_bar
Zstat
qnorm(0.05)
qnorm(0.95)
#90
X_bar - sd_X_bar* qnorm(.95)
X_bar + sd_X_bar* qnorm(.95)
X_bar - sd_X_bar* qnorm(.975)
X_bar + sd_X_bar* qnorm(.975)
#99
X_bar - sd_X_bar* qnorm(.995)
X_bar + sd_X_bar* qnorm(.995)
X_bar = mean(GDP_GR_1950)
X_bar
mean(GDP_growthRate)
var(GDP_growthRate)
sqrt( var(GDP_growthRate) )
sqrt( var(GDP_GR_1950) )
X_bar = mean(GDP_growthRate)
X_bar
n = length(GDP_growthRate)
Sigma = 0.075
sd_X_bar = sqrt( Sigma^2/ n)
Sigma^2
mu = 0.06
sample mean estimator
X_bar = mean(GDP_growthRate)
X_bar
# sample size
n = length(GDP_growthRate)
Sigma = 0.075
sd_X_bar = sqrt( Sigma^2/ n)
Zstat = (X_bar- mu)/ sd_X_bar
Zstat
sqrt( var(GDP_growthRate) )  #
Sigma^2/ n
Zstat
Zstat
qnorm(0.05)
Zstat
qnorm(0.95)
X_bar - sd_X_bar* qnorm(.95)
X_bar + sd_X_bar* qnorm(.95)
2*pnorm(-abs(Zstat))
2*pnorm(-abs(Zstat))
2*(1- pnorm(abs(Zstat)))
mu
setwd("~/Dropbox/Econometrics  R Emprical Analysis/assignment/Assignment5")
df <- read.csv("Assignment5_X.csv")
df <- read.csv("Assignment5_X.csv")
df
X <- df[,1]
X
df <- read.csv("Assignment5_Y.csv")
Y <- df[,1]
Y
