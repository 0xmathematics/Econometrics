c(1, 2, 3) + c(10, 20)
To select subsets of a vector, use square brackets ([ ]).
d
#Matrices can be created with the matrix command, specifying all elements (column-by-column)
#as well as the number of rows and number of columns.
A <- matrix(1:12, nr=3, nc=4)
A
#You may also specify the rows (or columns) as vectors, and then combine them into a matrix
#using the rbind (cbind) command.
a <- c(1,2,3)
a
b <- c(10, 20, 30)
b
c <- c(100, 200, 300)
c
d <- c(1000, 2000, 3000)
d
B <- rbind(a, b, c, d)
B
C <- cbind(a, b, c, d)
C
#To select a subset of a matrix, use the square brackets and specify rows before the comma, and
#columns after.
C[1:2,]
C[,c(1,3)]
C[1:2,c(1,3)]
C
sum(C)
apply(C, 1, sum)
colSums(C)
rowSums(C)
apply(C, 2, sum) # apply sum function on each column
colSums(C)
?qnorm()
percentile_95 = qnorm(0.95, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
percentile_95
percentile_975 = qnorm(0.975, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
percentile_975
percentile_975
n = 414
mu = 678.5
sd = 20.5
?qnorm()
percentile_975 = qnorm(0.975, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
percentile_975
CI_right = mu + 1/sqrt(n) * sd*percentile_975
CI_left = mu - 1/sqrt(n) * sd*percentile_975
round(c(CI_left,CI_right), digits = 2)
sd1^2
mu1 = 690.3
mu2 = 682.5
sd1 = 20.4
sd2 = 18.8
n1 = 229
n2 = 182
sd1^2
t_stat = (mu1-mu2)/sd_diff
mu1 = 690.3
mu2 = 682.5
sd1 = 20.4
sd2 = 18.8
n1 = 229
n2 = 182
sd_diff = sqrt(sd1^2/n1 + sd2^2/n2)
t_stat = (mu1-mu2)/sd_diff
t_stat
round(t_stat, digits = 2)
pvalue = pnorm(t_stat, mean = 0, sd = 1, lower.tail = F, log.p = FALSE)
round(pvalue, digits = 6)
t_stat
dtibble <- read_excel("data-1_28_2019-1_57 PM.xlsx", skip = 1, col_names = T, col_types = "numeric")
df = data.frame(dtibble)
head(df)
setwd("~/Dropbox/Econometrics/R Emprical Analysis/HW3")
dtibble <- read_excel("data-1_28_2019-1_57 PM.xlsx", skip = 1, col_names = T, col_types = "numeric")
df = data.frame(dtibble)
head(df)
library('readxl')
dtibble <- read_excel("data-1_28_2019-1_57 PM.xlsx", skip = 1, col_names = T, col_types = "numeric")
df = data.frame(dtibble)
head(df)
dtibble <- read_excel("data-1_28_2019-1_57 PM.xlsx", skip = 1, col_names = TRUE, col_types = "numeric")
df = data.frame(dtibble)
head(df)
which(df['Year'] = 1992)
df['Year'] == 1992
df[df['Year'] == 1992]
df[df['Year'] == 1992,]
df_1992 = df[df['Year'] == 1992,]
df_1992
df_1992['Ahe']
mean(df_1992['Ahe'])
df_1992['Ahe']
mean(df_1992[,'Ahe'])
round(mean_1992, digits = 3)
mean_1992 = mean(df_1992[,'Ahe'])
round(mean_1992, digits = 3)
df_2008 = df[df['Year'] == 2008,]
df_2008
mean_2008 = mean(df_2008[,'Ahe'])
round(mean_2008, digits = 3)
length(df_1992)
df_1992
nrow(df_1992)
n = nrow(df_1992)
sd(df_1992)
?se
df_1992
sd(df_1992[,'Ahe'])
n = nrow(df_1992)
mu = mean(df_1992)
sd = sd(df_1992[,'Ahe'])
percentile_975 = qnorm(0.975, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
percentile_975
CI_right = mu + 1/sqrt(n) * sd*percentile_975
CI_left = mu - 1/sqrt(n) * sd*percentile_975
round(c(CI_left,CI_right), digits = 3)
n = nrow(df_1992)
mu = mean(df_1992[,'Ahe'])
sd = sd(df_1992[,'Ahe'])
percentile_975 = qnorm(0.975, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
percentile_975
CI_right = mu + 1/sqrt(n) * sd*percentile_975
CI_left = mu - 1/sqrt(n) * sd*percentile_975
round(c(CI_left,CI_right), digits = 3)
n = nrow(df_2008)
mu = mean(df_2008[,'Ahe'])
sd = sd(df_2008[,'Ahe'])
percentile_975 = qnorm(0.975, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
percentile_975
CI_right = mu + 1/sqrt(n) * sd*percentile_975
CI_left = mu - 1/sqrt(n) * sd*percentile_975
round(c(CI_left,CI_right), digits = 3)
mu1 = mean(df_2008[,'Ahe'])
mu2 = mean(df_1992[,'Ahe'])
sd1 = sd(df_2008[,'Ahe'])
sd2 = sd(df_1992[,'Ahe'])
n1 = nrow(df_2008)
n2 = nrow(df_1992)
mu_diff = mu1-mu2
sd_diff = sqrt(sd1^2/n1 + sd2^2/n2)
percentile_975 = qnorm(0.975, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
percentile_975
CI_right = mu_diff + 1/sqrt(n) * sd_diff*percentile_975
CI_left = mu_diff - 1/sqrt(n) * sd_diff*percentile_975
round(c(CI_left,CI_right), digits = 3)
CI_right = mu_diff +  sd_diff*percentile_975
CI_left = mu_diff - sd_diff*percentile_975
round(c(CI_left,CI_right), digits = 3)
mu1 = mean(df_2008[,'Ahe'])
mu2 = mean(df_1992[,'Ahe'])
sd1 = sd(df_2008[,'Ahe'])
sd2 = sd(df_1992[,'Ahe'])
n1 = nrow(df_2008)
n2 = nrow(df_1992)
mu_diff = mu1-mu2
sd_diff = sqrt(sd1^2/n1 + sd2^2/n2)
percentile_975 = qnorm(0.975, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
percentile_975
CI_right = mu_diff +  sd_diff*percentile_975
CI_left = mu_diff - sd_diff*percentile_975
round(c(CI_left,CI_right), digits = 3)
mu1
sd1
n1
n2
mu1 = mean(df_2008[,'Ahe'])
mu2 = mean(df_1992[,'Ahe'])
sd1 = sd(df_2008[,'Ahe'])
sd2 = sd(df_1992[,'Ahe'])
n1 = nrow(df_2008)
n2 = nrow(df_1992)
mu_diff = mu1-mu2
mu_diff
sd_diff
mu_diff = mu1-mu2
sd_diff = sqrt(sd1^2/n1 + sd2^2/n2)
percentile_975
mu_diff
sd_diff
percentile_975
CI_right = mu_diff +  sd_diff*percentile_975
CI_right
CI_left = mu_diff - sd_diff*percentile_975
CI_left
round(c(CI_left,CI_right), digits = 3)
round(c(CI_left,CI_right), digits = 4)
round(c(CI_left,CI_right), digits = 3)
CPI1 = 215.2
CPI2 = 140.3
Adj_Price = df_1992[,'Ahe']*(CPI1/CPI2)
mean_Adj_Price = mean(Adj_Price)
round(mean_Adj_Price, digits = 3)
Adj_Price
n = nrow(df_1992)
mu = mean_Adj_Price
sd = sd(Adj_Price)
percentile_975 = qnorm(0.975, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
percentile_975
CI_right = mu + 1/sqrt(n) * sd*percentile_975
CI_left = mu - 1/sqrt(n) * sd*percentile_975
round(c(CI_left,CI_right), digits = 3)
mu1 = mean(df_2008[,'Ahe'])
mu2 = mean_Adj_Price
sd1 = sd(df_2008[,'Ahe'])
sd2 = sd(Adj_Price)
n1 = nrow(df_2008)
n2 = nrow(df_1992)
mu_diff = mu1-mu2
sd_diff = sqrt(sd1^2/n1 + sd2^2/n2)
percentile_975 = qnorm(0.975, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
percentile_975
CI_right = mu_diff +  sd_diff*percentile_975
CI_left = mu_diff - sd_diff*percentile_975
round(c(CI_left,CI_right), digits = 3)
df_2008
df_2008['Bachelor'] == 0
df_2008[df_2008['Bachelor'] == 0,]
## CI for mean of AHE for High School Graduates
df_2008_hs = df_2008[df_2008['Bachelor'] == 0,]
n = nrow(df_2008_hs)
mu = mean(df_2008_hs[,'Ahe'])
sd = sd(df_2008_hs[,'Ahe'])
percentile_975 = qnorm(0.975, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
percentile_975
CI_right = mu + 1/sqrt(n) * sd*percentile_975
CI_left = mu - 1/sqrt(n) * sd*percentile_975
round(c(CI_left,CI_right), digits = 3)
df_2008_hs = df_2008[df_2008['Bachelor'] == 1,]
n = nrow(df_2008_hs)
mu = mean(df_2008_hs[,'Ahe'])
sd = sd(df_2008_hs[,'Ahe'])
percentile_975 = qnorm(0.975, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
percentile_975
CI_right = mu + 1/sqrt(n) * sd*percentile_975
CI_left = mu - 1/sqrt(n) * sd*percentile_975
round(c(CI_left,CI_right), digits = 3)
df_2008_g = df_2008[df_2008['Bachelor'] == 1,]
n = nrow(df_2008_g)
mu = mean(df_2008_g[,'Ahe'])
sd = sd(df_2008_g[,'Ahe'])
percentile_975 = qnorm(0.975, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
percentile_975
CI_right = mu + 1/sqrt(n) * sd*percentile_975
CI_left = mu - 1/sqrt(n) * sd*percentile_975
round(c(CI_left,CI_right), digits = 3)
mu1 = mean(df_2008_g[,'Ahe'])
mu2 = mean(df_2008_hs[,'Ahe'])
sd1 = sd(df_2008_g[,'Ahe'])
sd2 = sd(df_2008_hs[,'Ahe'])
n1 = nrow(df_2008_g)
n2 = nrow(df_2008_hs)
mu_diff = mu1-mu2
sd_diff = sqrt(sd1^2/n1 + sd2^2/n2)
percentile_975 = qnorm(0.975, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
percentile_975
CI_right = mu_diff +  sd_diff*percentile_975
CI_left = mu_diff - sd_diff*percentile_975
round(c(CI_left,CI_right), digits = 3)
df_2008_g
df_2008_hs
df_2008_hs = df_2008[df_2008['Bachelor'] == 0,]
n = nrow(df_2008_hs)
mu = mean(df_2008_hs[,'Ahe'])
sd = sd(df_2008_hs[,'Ahe'])
percentile_975 = qnorm(0.975, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
percentile_975
CI_right = mu + 1/sqrt(n) * sd*percentile_975
CI_left = mu - 1/sqrt(n) * sd*percentile_975
round(c(CI_left,CI_right), digits = 3)
mu1 = mean(df_2008_g[,'Ahe'])
mu2 = mean(df_2008_hs[,'Ahe'])
sd1 = sd(df_2008_g[,'Ahe'])
sd2 = sd(df_2008_hs[,'Ahe'])
n1 = nrow(df_2008_g)
n2 = nrow(df_2008_hs)
mu_diff = mu1-mu2
sd_diff = sqrt(sd1^2/n1 + sd2^2/n2)
percentile_975 = qnorm(0.975, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
percentile_975
CI_right = mu_diff +  sd_diff*percentile_975
CI_left = mu_diff - sd_diff*percentile_975
round(c(CI_left,CI_right), digits = 3)
df_1992_hs = df_1992[df_1992['Bachelor'] == 0,]
n = nrow(df_1992_hs)
mu = mean(df_1992_hs[,'Ahe'])
sd = sd(df_1992_hs[,'Ahe'])
percentile_975 = qnorm(0.975, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
percentile_975
CI_right = mu + 1/sqrt(n) * sd*percentile_975
CI_left = mu - 1/sqrt(n) * sd*percentile_975
round(c(CI_left,CI_right), digits = 3)
df_1992[df_1992['Bachelor'] == 0,]
df_1992
CPI1 = 215.2
CPI2 = 140.3
df_1992_hs = df_1992[df_1992['Bachelor'] == 0,]
Adj_df_1992_hs = df_1992_hs[,'Ahe']*(CPI1/CPI2)
n = nrow(Adj_df_1992_hs)
mu = mean(Adj_df_1992_hs[,'Ahe'])
sd = sd(Adj_df_1992_hs[,'Ahe'])
percentile_975 = qnorm(0.975, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
percentile_975
CI_right = mu + 1/sqrt(n) * sd*percentile_975
CI_left = mu - 1/sqrt(n) * sd*percentile_975
round(c(CI_left,CI_right), digits = 3)
Adj_df_1992_hs
n
length(Adj_df_1992_hs)
df_1992_hs = df_1992[df_1992['Bachelor'] == 0,]
Adj_df_1992_hs = df_1992_hs[,'Ahe']*(CPI1/CPI2)
n = length(Adj_df_1992_hs)
mu = mean(Adj_df_1992_hs)
sd = sd(Adj_df_1992_hs)
percentile_975 = qnorm(0.975, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
percentile_975
CI_right = mu + 1/sqrt(n) * sd*percentile_975
CI_left = mu - 1/sqrt(n) * sd*percentile_975
round(c(CI_left,CI_right), digits = 3)
df_2008_g = df_2008[df_2008['Bachelor'] == 1,]
n = nrow(df_2008_g)
mu = mean(df_2008_g[,'Ahe'])
sd = sd(df_2008_g[,'Ahe'])
percentile_975 = qnorm(0.975, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
percentile_975
CI_right = mu + 1/sqrt(n) * sd*percentile_975
CI_left = mu - 1/sqrt(n) * sd*percentile_975
round(c(CI_left,CI_right), digits = 3)
df_1992_g = df_1992[df_1992['Bachelor'] == 1,]
Adj_df_1992_g = df_1992_g[,'Ahe']*(CPI1/CPI2)
n = length(Adj_df_1992_g)
mu = mean(Adj_df_1992_g)
sd = sd(Adj_df_1992_g)
percentile_975 = qnorm(0.975, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
percentile_975
CI_right = mu + 1/sqrt(n) * sd*percentile_975
CI_left = mu - 1/sqrt(n) * sd*percentile_975
df_1992_g = df_1992[df_1992['Bachelor'] == 1,]
Adj_df_1992_g = df_1992_g[,'Ahe']*(CPI1/CPI2)
n = length(Adj_df_1992_g)
mu = mean(Adj_df_1992_g)
sd = sd(Adj_df_1992_g)
percentile_975 = qnorm(0.975, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
percentile_975
CI_right = mu + 1/sqrt(n) * sd*percentile_975
CI_left = mu - 1/sqrt(n) * sd*percentile_975
round(c(CI_left,CI_right), digits = 3)
Adj_df_1992_g
Adj_df_1992_g
mu1 = mean(df_2008_g[,'Ahe'])
mu2 = mean(Adj_df_1992_g)
sd1 = sd(df_2008_g[,'Ahe'])
sd2 = sd(Adj_df_1992_g)
n1 = nrow(df_2008_g)
n2 = length(Adj_df_1992_g)
mu_diff = mu1-mu2
sd_diff = sqrt(sd1^2/n1 + sd2^2/n2)
percentile_975 = qnorm(0.975, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
percentile_975
CI_right = mu_diff +  sd_diff*percentile_975
CI_left = mu_diff - sd_diff*percentile_975
round(c(CI_left,CI_right), digits = 3)
Adj_df_1992_hs
## 1992 mean diff between high school and graduates
mu1 = mean(Adj_df_1992_g)
mu2 = mean(Adj_df_1992_hs)
sd1 = sd(Adj_df_1992_g)
sd2 = sd(Adj_df_1992_hs)
n1 = length(Adj_df_1992_g)
n2 = length(Adj_df_1992_hs)
mu_diff = mu1-mu2
sd_diff = sqrt(sd1^2/n1 + sd2^2/n2)
percentile_975 = qnorm(0.975, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)
percentile_975
CI_right = mu_diff +  sd_diff*percentile_975
CI_left = mu_diff - sd_diff*percentile_975
round(c(CI_left,CI_right), digits = 3)
E_X = 0*0.47 + 1*0.53
E_X
E_X = 0*0.47 + 1*0.53
E_Y = 0*0.47 + 1*0.53
E_W = 7 +2*E_X
E_W
round(E_W, digits = 2)
colnames(df)
colnames(df)
df
dtibble <- read_excel("data.xlsx",   skip = 2, col_types = "numeric")
#here is what the data looks like:
head(dtibble) # the function head() shows the first ten rows of the data
df = data.frame(dtibble)
# this is what data frame looks like. Simmilar to tibble.
head(df)
df
setwd("~/Dropbox/Econometrics/R Emprical Analysis/HW2")
#using the function read_excel in readxl package to load the data as as tibble data structure
dtibble <- read_excel("data.xlsx",   skip = 2, col_types = "numeric")
#here is what the data looks like:
head(dtibble) # the function head() shows the first ten rows of the data
#If you are more familiar with dtibble data structure, you could operate using dtibble.
#Since I prefer data frame data structure in R, so I will convert the dtibble further to data frame:
df = data.frame(dtibble)
# this is what data frame looks like. Simmilar to tibble.
head(df)
colnames(df)
colnames(df)[1]
df["X25"]
df[,2]
rowIndex = which(df['Hourly.Earnings..AHE.']==6)
which(df['Hourly.Earnings..AHE.']==6)
df[rowIndex,]
sum(df)
df
df[,-1]
sum(df[,-1])
colSums(df[,-1])
round(colSums(df[,-1]),digits = 4)
df
marginal_density = round(colSums(df[,-1]),digits = 4)
conditional_expectation =  colSums(df[,1] * df[,-1])/marginal_density
conditional_expectation
marginal_density = round(colSums(df[,-1]),digits = 4)
conditional_expectation =  colSums(df[,1] * df[,-1])/marginal_density
colnames(df)[-1]
plot(conditional_expectation,
xaxt = "n",yaxt = "n",
main="Expectation of AHE Conditioned on Age",
ylab="E[ AHE | Age ]",xlab="Age",
col.lab="red", cex.lab=0.9,
ylim =c(15,30))
axis(1, at=1:10, labels=colnames(df)[-1],cex.axis=0.7 )
axis(2, cex.axis=0.7 )
df[,1]
df[,-1]
library('readxl')
#Load the data analysis package dplyr and its dependency packages
library('base')
library('stats')
library('dplyr')
setwd("~/Dropbox/Econometrics/R Emprical Analysis/HW2")
################################################################
#using the function read_excel in readxl package to load the data as as tibble data structure
dtibble <- read_excel("data.xlsx",   skip = 2, col_types = "numeric")
#here is what the data looks like:
head(dtibble) # the function head() shows the first ten rows of the data
#If you are more familiar with dtibble data structure, you could operate using dtibble.
#Since I prefer data frame data structure in R, so I will convert the dtibble further to data frame:
df = data.frame(dtibble)
# this is what data frame looks like. Simmilar to tibble.
head(df)
df
df[,-1]
Pr_M_Age = colsum(df[,-1])
Pr_M_Age = colSums(df[,-1])
round(Pr_M_Age, digits = 4)
mu_f = 59
sd_f = 11
mu_c = 5/9*(mu_f-32)
mu_f = 59
mu_f
sd_f = 11
sd_f
mu_c = 5/9*(mu_f-32)
mu_c
mu_c = 5/9*(mu_f-32)
round(mu_c, digits = 3)
sd_c = (5/9)*sd_f
round(sd_c, digits = 3)
E_X = 0*0.55 + 1*0.45
E_Y = 0*0.44 + 1*0.56
E_X
E_W = 9 +2*E_X
round(E_W, digits = 2)
E_V = 4 + 6*E_Y
round(E_V, digits = 2)
Var_X = (0-E_X)^2*0.55 + (1-E_X)^2*0.45
Var_Y = (0-E_X)^2*0.44 + (1-E_X)^2*0.56
Var_X = (0-E_X)^2*0.55 + (1-E_X)^2*0.45
Var_Y = (0-E_X)^2*0.44 + (1-E_X)^2*0.56
Var_W = 2^2*Var_X
round(Var_W, digits = 4)
setwd("~/Dropbox/Econometrics/R Emprical Analysis/HW2")
setwd("~/Dropbox/Econometrics/R Emprical Analysis/HW2")
dtibble <- read_excel("data-9_22_2019-9_27 PM.xlsx",   skip = 2, col_types = "numeric")
################################################################
library('readxl')
install.packages("readxl")
install.packages("readxl")
library('readxl')
dtibble <- read_excel("data-9_22_2019-9_27 PM.xlsx",   skip = 2, col_types = "numeric")
#here is what the data looks like:
head(dtibble) # the function head() shows the first ten rows of the data
#If you are more familiar with dtibble data structure, you could operate using dtibble.
#Since I prefer data frame data structure in R, so I will convert the dtibble further to data frame:
df = data.frame(dtibble)
# this is what data frame looks like. Simmilar to tibble.
head(df)
df
head(df)
################################################################
#Marginal Prob of Age = 30 is:
# one way
Pr_M_Age30 = colSums(df['X30'])
# another way
Pr_M_Age30 = Pr_M_Age['X30']
#conditional Prob of AHE given Age = 30 is:
Pr_C_Age30 = df['X30']/Pr_M_Age30
#conditional Expectation of AHE given Age = 30 is:
E_AHE_age30 = sum(df[,1]*Pr_C_Age30)
round(E_AHE_age30, digits = 4)
Pr_M_Age = colSums(df[,-1])
round(Pr_M_Age, digits = 4)
