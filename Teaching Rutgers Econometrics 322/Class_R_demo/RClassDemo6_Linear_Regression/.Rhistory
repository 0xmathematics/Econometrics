n = length(x)
n
m = length(y)
m
#Q3
x_bar = mean(x)
y_bar = mean(y)
Q3 = x_bar-y_bar
round(Q3, digits = 3)
Var_X = 400
Var_Y = 900
var(x)
var(y)
y_bar = mean(y)
Var_XY = Var_X/n+Var_Y/m
round(Var_XY, digits = 3)
z = (mean(x)-mean(y))/sqrt(Var_XY)
round(z, digits = 3)
#Q9
# Critical Value
Q9 = qnorm(0.05)
round(Q9, digits = 3)
Q11 = pnorm(z)
round(Q11, digits = 3)
cv = qnorm(0.975)
left = x_bar - y_bar - cv*sqrt(Var_XY)
right = x_bar - y_bar + cv*sqrt(Var_XY)
Q12 = c(left,right)
round(Q12, digits = 3)
setwd("~/Desktop/Econometrics HW/Assignment4")
df <- read.csv("Dataset_Assignment4 (1).csv")
head(df)
x = df[,1]
x
df <- read.csv("Dataset_Assignment4 (1).csv")
head(df)
setwd("~/Desktop/Econometrics HW/Assignment4")
setwd("~/Desktop/Econometrics HW/Assignment4")
df <- read.csv("Dataset_Assignment4.csv")
head(df)
clear
c
clearPushBack()
setwd("~/Dropbox/Econometrics  R Emprical Analysis/assignment/Assignment4")
df <- read.csv("Dataset_Assignment4.csv")
x = df[,1]
n = length(x)
x_bar = mean(x)
round(x_bar,digits = 3)
#Q5 Variance of the estimator
# Var of X
Var_X = 10
n = length(x)
# Var of estimator
Var_X_bar = 1/n*Var_X
round(Var_X_bar,digits = 3)
############################################################
# Sample Variance of the X
Sample_Var_x = sum((x - x_bar)^2)/(n-1)
Sample_Var_x
Sample_Var_x = sum((x - x_bar)^2)/n
Sample_Var_x
# Variance of the estimator with unknown Variance parameter
var_xbar = Sample_Var_x/n
var_xbar
#sd of the estimator
sd_xbar = sqrt(var_xbar)
sd_xbar
###############################################################
# statistics
z = (x_bar - 22)/sqrt(var_xbar)
z
# Q9
z = (x_bar - 22)/sqrt(Var_X_bar)
round(z, digits = 3)
# Q10
# Critical Value
qnorm(0.10)
q12 = pnorm(z)
round(q12, digits = 3)
cv = qnorm(0.95)
left = x_bar - cv*sd_xbar
right = x_bar + cv*sd_xbar
CI90 = c(left,right)
round(CI90, digits = 3)
setwd("~/Desktop/Econometrics HW/Assignment4")
df <- read.csv("Dataset_Assignment4 (1).csv")
head(df)
df
x = df[,1]
x
length(x)
z = (mean(x)-22)/sqrt(1/n*10)
round(z,digits = 3)
setwd("~/Dropbox/Econometrics  R Emprical Analysis/assignment/Assignment5")
X <- read.csv("Assignment5_X.csv")
Y <- read.csv("Assignment5_Y.csv")
nrow(X)
nrow(Y)
30/1000 + 40/2000
qnorm(0.01)
E_XY = (1*AA[2,2] + 2*AA[2,3] + 2*AA[3,2] + 4*AA[3,3])
E_X = 0*Px[1] + 1*Px[2]+ 2*Px[3]
E_Y = 0*Py[1] + 1*Py[2]+ 2*Py[3]
Q9 = E_XY-E_X*E_Y
round(Q9,digits = 3)
E_Y = 0*Py[1] + 1*Py[2]+ 2*Py[3]
E_Y2 = 0*Py[1] + 1*Py[2]+ 4*Py[3]
VarY = E_Y2-E_Y^2
E_X = 0*Px[1] + 1*Px[2]+ 2*Px[3]
E_X2 = 0*Px[1] + 1*Px[2]+ 4*Px[3]
VarX = E_X2-E_X^2
Q10 = Q9/sqrt(VarY*VarX)
round(Q10,digits = 3)
Var_Y = 16.71
Q2 = c(15.77/Var_Y,13.78/Var_Y,12.08/Var_Y,11.14/Var_Y)
round(Q2,digits = 2)
beta1 = 0.95
sd = 0.02
crit = qnorm(0.975)
left = beta1 -crit*sd
right = beta1 + crit*sd
CI_95 = c(left, right)
Q3 = round(CI_95,digits = 2)
beta1 = 0.95
sd = 0.02
crit = qnorm(0.975)
left = beta1 -crit*sd
right = beta1 + crit*sd
CI_95 = c(left, right)
round(CI_95,digits = 2)
x = c(1:10)
x
log(x)
diff(log(x))
x = c(1:10)
x
y = c(2:11)
y
xy = cbind(x,y)
xy
diff(log(x))
diff(log(xy))
1:10
M1 = matrix( 1:10, nrow = 5, ncol = 2, byrow = TRUE )
M1
M1 = matrix( 1:10, nrow = 5, ncol = 2, byrow = FALSE )
M1
M1 = matrix( 1:10, nrow = 5, ncol = 2, byrow = TRUE )
M1
M2 = matrix(rep(1,times = 10), nrow = 5, ncol = 2, byrow = TRUE)
M2
rep(1,times = 10)
M1 + M2
# creat vector
V1 = c(1:5)
V1
V2 = rep(1, times = 5)
V2
t(V1)
V1
# transpose M1 a 5*2 matrix to a 2*5 matrix
t(M1)
M1
# vector sumation
V1 + V2
2*5
V1
V2
V1 * V2
M1
M2
M1 %*% M2
M1
M2
t(M2)
M1 %*% t(M2)
t(M1)
M2
t(M1) %*% M2
M1 * V1
M1 %*% V1
V1
M1
M1 %*% c(1,2)
M5 = diag(c(1,2,3,4,5))
M5
M6 = diag(5)
M6
### creat a diagnol matrix
M5 = diag(c(1,2,3,4,5))
M5
solve(M5)
M5inv = solve(M5)
M5inv
M5 %*% M5inv
c(0:3)
rep(4)
rep(1,4)
cbind(constant,x_sample)
x_sample = c(0:3)
constant = rep(1,4)
cbind(constant,x_sample)
X = cbind(constant,x_sample)
X = as.matrix( X)
X
X
rep(1,4)
rep(2,4)
x_sample
constant
constant
X
x_sample = c(0:3)
constant = rep(1,4)
X = cbind(constant,x_sample)
X = as.matrix( X )
X
Y = c(4,1,0,1 )
X
Y
beta_ols =  solve( t(X) %*% X ) %*% t(X) %*% Y
beta_ols
set.seed(5)
N = 5000
u = rnorm(N, 0, 100)
x1= rnorm(N, 20, 5)
x2= rchisq(N, df = 20, ncp = 0)
x3= rbinom(n=N, size = 1, prob=0.1)
x4= rbinom(n=N, size = 1, prob=0.8)
beta0 = 5
beta1 = -2
beta2 = 3
beta3 = 8
beta4 = -3
y = beta0+ beta1*x1+beta2*x2+beta3*x3+beta4*x4+u
data = cbind(y,x1,x2,x3,x4)
head(data)
write.csv(data,"A6.csv",row.names = FALSE)
setwd("~/Dropbox/Econometrics  R Emprical Analysis/assignment/Assignment6")
set.seed(5)
N = 5000
u = rnorm(N, 0, 100)
x1= rnorm(N, 20, 5)
x2= rchisq(N, df = 20, ncp = 0)
x3= rbinom(n=N, size = 1, prob=0.1)
x4= rbinom(n=N, size = 1, prob=0.8)
beta0 = 5
beta1 = -2
beta2 = 3
beta3 = 8
beta4 = -3
y = beta0+ beta1*x1+beta2*x2+beta3*x3+beta4*x4+u
data = cbind(y,x1,x2,x3,x4)
head(data)
write.csv(data,"A6.csv",row.names = FALSE)
df <- read.csv("A6.csv")
head(df)
### matrix method
y = df[, 1]
X = df[ , c(2,3,4,5)]
n = nrow(df)
intercept = rep(1,nrow(df))
X = cbind(intercept,X)
X = as.matrix(X)
y = as.matrix(y)
#Q4
betaOLS = solve( t(X) %*% X ) %*% t(X) %*% y
round(betaOLS, digits = 3)
SSR = t(y- X %*%betaOLS )%*% (y- X %*%betaOLS )
sigmasqaureHat = SSR/ (n-4-1)
sigmasqaureHat = as.numeric(sigmasqaureHat)
round(sigmasqaureHat, digits = 3)
uhat = y- X %*%betaOLS
var(uhat)
uhat
VarCovMatrixBetaOLS = sigmasqaureHat * solve(t(X) %*% X)
VarBetaOLS = diag(VarCovMatrixBetaOLS)
sdBetaOLS = sqrt(VarBetaOLS)
round(sdBetaOLS, digits = 3)
betaOLS
betaOLS[1]
sdBetaOLS
sdBetaOLS[2]
b = 0 #null hypothesis
z = (betaOLS[2]-b)/sdBetaOLS[2]
round(z, digits = 3)
Q10 = qnorm(.995)
round(Q10, digits = 3)
Q12 = 2*pnorm(-abs(z))
round(Q12, digits = 3)
i = 2
cv = qnorm(0.995)
left = betaOLS[i]  - cv*sdBetaOLS[i]
right = betaOLS[i]  + cv*sdBetaOLS[i]
CI99 = c(left,right)
round(CI99, digits = 3)
setwd("~/Dropbox/Econometrics  R Emprical Analysis/assignment/Assignment7")
##########################
## Generate the  dataset
##############################
set.seed(6)
N = 40
u = rnorm(N, 0, 10)
x1= rnorm(N, 20, 4)
x2= rchisq(N, df = 20, ncp = 0)
x3= rbinom(n=N, size = 1, prob=0.1)
x4= rbinom(n=N, size = 1, prob=0.8)
beta0 = 5
beta1 = -2
beta2 = 3
beta3 = 8
beta4 = -3
y = beta0+ beta1*x1+beta2*x2+beta3*x3+beta4*x4+u
data = cbind(y,x1,x2,x3,x4)
head(data)
write.csv(data,"A7.csv",row.names = FALSE)
df <- read.csv("A7.csv")
head(df)
set.seed(6)
N = 30
u = rnorm(N, 0, 10)
x1= rnorm(N, 20, 4)
x2= rchisq(N, df = 20, ncp = 0)
x3= rbinom(n=N, size = 1, prob=0.1)
x4= rbinom(n=N, size = 1, prob=0.8)
beta0 = 5
beta1 = -2
beta2 = 3
beta3 = 8
beta4 = -3
y = beta0+ beta1*x1+beta2*x2+beta3*x3+beta4*x4+u
data = cbind(y,x1,x2,x3,x4)
head(data)
write.csv(data,"A7.csv",row.names = FALSE)
df <- read.csv("A7.csv")
head(df)
y = df[, 1]
X = df[ , c(2,3,4,5)]
n = nrow(df)
intercept = rep(1,nrow(df))
X = cbind(intercept,X)
X = as.matrix(X)
y = as.matrix(y)
betaOLS = solve( t(X) %*% X ) %*% t(X) %*% y
round(betaOLS,digits = 3)
betaOLS = solve( t(X) %*% X ) %*% t(X) %*% y
round(betaOLS, digits = 3)
set.seed(6)
N = 30
u = rnorm(N, 0, 10)
x1= rnorm(N, 20, 4)
x2= rchisq(N, df = 20, ncp = 0)
x3= rbinom(n=N, size = 1, prob=0.1)
x4= rbinom(n=N, size = 1, prob=0.8)
beta0 = 5
beta1 = -2
beta2 = 3
beta3 = 8
beta4 = -3
y = beta0+ beta1*x1+beta2*x2+beta3*x3+beta4*x4+u
data = cbind(y,x1,x2,x3,x4)
head(data)
write.csv(data,"A7.csv",row.names = FALSE)
df <- read.csv("A7.csv")
head(df)
y = df[, 1]
X = df[ , c(2,3,4,5)]
n = nrow(df)
intercept = rep(1,nrow(df))
X = cbind(intercept,X)
X = as.matrix(X)
y = as.matrix(y)
#Q3
betaOLS = solve( t(X) %*% X ) %*% t(X) %*% y
round(betaOLS, digits = 3)
uhat = y- X %*%betaOLS
SSR = t(y- X %*%betaOLS )%*% (y- X %*%betaOLS )
sigmasqaureHat = SSR/ (n-4-1)
sigmasqaureHat = as.numeric(sigmasqaureHat)
round(sigmasqaureHat, digits = 3)
VarCovMatrixBetaOLS = sigmasqaureHat * solve(t(X) %*% X)
VarBetaOLS = diag(VarCovMatrixBetaOLS)
sdBetaOLS = sqrt(VarBetaOLS)
round(sdBetaOLS,digits = 3)
linearMod2 <- lm(y ~ x1+x2+x3+x4, data=df)
summary(linearMod2)
summary(linearMod2)$coef
round(sdBetaOLS,digits = 3)
summary(linearMod2)$coef
round(betaOLS, digits = 3)
round(sdBetaOLS,digits = 3)
b = 2 #null hypothesis
i = 3 # the beta_2
z = (betaOLS[i]-b)/sdBetaOLS[i]
round(z, digits = 3)
summary(linearMod2)$coef
round(betaOLS, digits = 3)
round(sdBetaOLS,digits = 3)
b = 0 #null hypothesis
i = 3 # the beta_2
z = (betaOLS[i]-b)/sdBetaOLS[i]
round(z, digits = 3)
b = 2 #null hypothesis
i = 3 # the beta_2
z = (betaOLS[i]-b)/sdBetaOLS[i]
round(z, digits = 3)
Q11 = qt(.90,df=n-4-1)
round(Q11, digits = 3)
b = 2 #null hypothesis
i = 3 # the beta_2
t = (betaOLS[i]-b)/sdBetaOLS[i]
round(t, digits = 3)
n
Q11 = qt(.90,df=n-4-1)
round(Q11, digits = 3)
df
X
ncol(X)
t
Q12 = 1- pt(t, deg)
round(Q12, digits = 3)
deg = n - ncol(X)
Q11 = qt(.90,df=deg)
round(Q11, digits = 3)
Q12 = 1- pt(t, deg)
round(Q12, digits = 3)
pt(t, deg)
deg
qt(.90,df=deg)
i = 3
cv = qt(0.95)
left = betaOLS[i]  - cv*sdBetaOLS[i]
right = betaOLS[i]  + cv*sdBetaOLS[i]
CI90 = c(left,right)
round(CI90, digits = 3)
#Q13
Q12 = 1- pt(t, deg)
round(Q12, digits = 3)
deg = n - ncol(X)
Q11 = qt(.90,df=deg)
round(Q11, digits = 3)
setwd("~/Dropbox/Econometrics  R Emprical Analysis/class demo/Demo3 Linear Regression")
dtibble <- read_excel("cps08.xlsx", col_types = "numeric")
df = data.frame(dtibble)
head(df)
nrow(df)
df
X = df[ , c(3,4,5)]
X
n = nrow(df)
n
intercept = rep(1,nrow(df))
intercept
X
X = cbind(intercept,X)
X
X = as.matrix(X)
y = as.matrix(y)
X = as.matrix(X)
y = as.matrix(y)
betaOLS = solve( t(X) %*% X ) %*% t(X) %*% y
X
betaOLS = solve( t(X) %*% X ) %*% t(X) %*% y
X = as.matrix(X)
y = as.matrix(y)
solve( t(X) %*% X ) %*% t(X) %*% y
dtibble <- read_excel("cps08.xlsx", col_types = "numeric")
df = data.frame(dtibble)
head(df)
nrow(df)
y = df$ahe
X = df[ , c(3,4,5)]
n = nrow(df)
intercept = rep(1,nrow(df))
X = cbind(intercept,X)
X = as.matrix(X)
y = as.matrix(y)
betaOLS = solve( t(X) %*% X ) %*% t(X) %*% y
betaOLS
SSR = t(y- X %*%betaOLS )%*% (y- X %*%betaOLS )
SSR
u_hat = y- X %*%betaOLS
SSR2 = sum(u_hat^2)
SSR2
sigmasqaureHat = SSR/ (n-3-1)
sigmasqaureHat
sigmasqaureHat = as.numeric(sigmasqaureHat)
sigmasqaureHat
sigmasqaureHat = SSR/ (n-3-1)
sigmasqaureHat = as.numeric(sigmasqaureHat)
VarCovMatrixBetaOLS = sigmasqaureHat * solve(t(X) %*% X)
VarCovMatrixBetaOLS
diag(VarCovMatrixBetaOLS)
VarBetaOLS = diag(VarCovMatrixBetaOLS)
sdBetaOLS = sqrt(VarBetaOLS)
sdBetaOLS
betaOLS
df
linearMod2 <- lm(ahe ~ bachelor+female+age, data=df)
summary(linearMod2)$coef
summary(linearMod2)$coef
betaOLS
sdBetaOLS
qnorm(0.99)
qt(0.99)
n-3-1
qnorm(0.99)
qt(0.99, deg)
qnorm(0.99)
qt(0.99, deg)
1- pt(t,deg)
