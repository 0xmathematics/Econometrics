MyData <- read.csv("CASchoolsData.csv", header=TRUE, sep=",")
head(MyData)
CASchools <- read.csv("CASchoolsData.csv", header=TRUE, sep=",")
CASchools
### Matrix method
y = CASchools$test_score
X = CASchools$STR
n = length(y)
intercept = rep(1,n)
X = cbind(intercept,X)
X = as.matrix(X)
y = as.matrix(y)
betaOLS = solve( t(X) %*% X ) %*% t(X) %*% y
SSR = t(y- X %*%betaOLS )%*% (y- X %*%betaOLS )
SigmaSquared_Hat = SSR/ (n-1-1)
SigmaSquared_Hat = as.numeric(SigmaSquared_Hat)
VarCovMatrixBetaOLS = SigmaSquared_Hat * solve(t(X) %*% X)
VarBetaOLS = diag(VarCovMatrixBetaOLS)
sdBetaOLS = sqrt(VarBetaOLS)
# Software Package
linearMod2 <- lm(test_score ~ STR, data=CASchools)
summary(linearMod2)
summary(linearMod2)$coef
library(AER)
data("CigarettesSW")
summary(CigarettesSW)
head(CigarettesSW)
CigarettesSW$rprice <- with(CigarettesSW, price / cpi)
head(CigarettesSW)
CigarettesSW$salestax <- with(CigarettesSW, (taxs - tax) / cpi)
head(CigarettesSW)
c1995 <- subset(CigarettesSW, year == "1995")
c1995
c1995$log_packs = log(c1995$packs)
c1995$log_rprice = log(c1995$rprice)
head(c1995)
OLS_model = lm( log_rprice ~log_packs , data = c1995)
OLS_model = lm( log_rprice ~log_packs , data = c1995)
coeftest(OLS_model, vcov. = vcovHC, type = "HC1")
head(c1995)
cig_s1 <- lm(log_packs ~ salestax, data = c1995)
cig_s1 <- lm(log_packs ~ salestax, data = c1995)
coeftest(cig_s1, vcov = vcovHC, type = "HC1")
coeftest(cig_s1, vcov. = vcovHC, type = "HC1")
cig_ivreg <- ivreg(log_packs ~ log_rprice | salestax, data = c1995)
coeftest(cig_ivreg, vcov = vcovHC, type = "HC1")
OLS_model = lm( log_packs ~ log_rprice, data = c1995)
coeftest(OLS_model, vcov. = vcovHC, type = "HC1")
# perform TSLS using 'ivreg()'
cig_ivreg <- ivreg(log_packs ~ log_rprice | salestax, data = c1995)
coeftest(cig_ivreg, vcov = vcovHC, type = "HC1")
# Question 3
library(quantmod)
install.packages("quantmod")
library(quantmod)
USMacroSWQ$...1 <- as.yearqtr(USMacroSWQ$...1, format = "%Y:0%q")
data(USMacroSWQ)
USMacroSWQ$...1 <- as.yearqtr(USMacroSWQ$...1, format = "%Y:0%q")
USMacroSWQ
head(USMacroSWQ)
USMacroSWQ <- read_xlsx("Data/us_macro_quarterly.xlsx",
sheet = 1,
col_types = c("text", rep("numeric", 9)))
install.packages("readxl")
library("readxl")
USMacroSWQ <- read_xlsx("Data/us_macro_quarterly.xlsx",
sheet = 1,
col_types = c("text", rep("numeric", 9)))
setwd("~/Dropbox/Econometrics/R Emprical Analysis/class demo/project 2")
USMacroSWQ <- read_xlsx("us_macro_quarterly.xlsx",
sheet = 1,
col_types = c("text", rep("numeric", 9)))
head(USMacroSWQ)
USMacroSWQ$...1 <- as.yearqtr(USMacroSWQ$...1, format = "%Y:0%q")
library(quantmod)
USMacroSWQ$...1 <- as.yearqtr(USMacroSWQ$...1, format = "%Y:0%q")
head(USMacroSWQ)
colnames(USMacroSWQ) <- c("Date", "GDPC96", "JAPAN_IP", "PCECTPI",
"GS10", "GS1", "TB3MS", "UNRATE", "EXUSUK", "CPIAUCSL")
head(USMacroSWQ)
GDP <- xts(USMacroSWQ$GDPC96, USMacroSWQ$Date)["1960::2013"]
head(GDP)
head(GDP)
GDPGrowth <- xts(400 * log(GDP/lag(GDP)))
GDPGRSub <- GDPGrowth["1962::2012"]
head(GDPGRSub)
ar.ols(GDPGRSub, order.max = 1, demean = F, intercept = T)
library(AER)
data(Fatalities)
head(Fatalities)
setwd("~/Dropbox/Econometrics/R Emprical Analysis/class demo/Demo7 Panel Data")
write.csv(CASchools,"FatalitiesData.csv", row.names = FALSE)
Fatalities <- read.csv("FatalitiesData.csv", header=TRUE, sep=",")
head(Fatalities)
is.data.frame(Fatalities)
Fatalities$fatal_rate <- Fatalities$fatal / Fatalities$pop * 10000
Fatalities
Fatalities$fatal_rate <- Fatalities$fatal / Fatalities$pop * 10000
head(Fatalities)
library(AER)
data(Fatalities)
head(Fatalities)
write.csv(Fatalities,"FatalitiesData.csv", row.names = FALSE)
Fatalities <- read.csv("FatalitiesData.csv", header=TRUE, sep=",")
head(Fatalities)
is.data.frame(Fatalities)
#create the dependent variable fatal rate
Fatalities$fatal_rate <- Fatalities$fatal / Fatalities$pop * 10000
head(Fatalities)
OLS_model <- lm(fatal_rate~beertax, data = Fatalities)
OLS_model <- lm(fatal_rate~beertax, data = Fatalities)
summary(OLS_model)
coeftest(OLS_model, vcov. = vcovHC, type = "HC1")
head(Fatalities)
ave(beertax, state)
aggregate(Fatalities$beertax, by=list(Fatalities$year, Fatalities$state), FUN=mean)
aggregate(Fatalities$beertax,Fatalities$fatal_rate, by=list(Fatalities$year, Fatalities$state), FUN=mean)
head(Fatalities)
head(Fatalities$beertax)
aggregate(Fatalities$beertax, by=list(Fatalities$year), FUN=mean)
aggregate(Fatalities$beertax, by=list(Fatalities$state), FUN=mean)
Mean_Beertax_EF = aggregate(Fatalities$beertax, by=list(Fatalities$state), FUN=mean)
Mean_FatalRate_EF = aggregate(Fatalities$fatal_rate, by=list(Fatalities$state), FUN=mean)
Mean_Beertax_EF
head(Fatalities)
Fatalities$Mean_Beertax_EF = aggregate(Fatalities$beertax, by=list(Fatalities$state), FUN=mean)
library(AER)
setwd("~/Dropbox/Econometrics/R Emprical Analysis/class demo/project 2")
write.csv(CASchools,"CASchoolsData.csv", row.names = FALSE)
write.csv(CASchools,"CigarettesSWData.csv", row.names = FALSE)
coeftest(quadratic_model, vcov. = vcovHC, type = "HC1")
c1995 <- subset(CigarettesSW, year == "1995")
head(c1995)
c1995$log_packs <- log(c1995$packs)
c1995$log_rprice = log(c1995$rprice)
head(c1995)
OLS_model = lm( log(c1995$packs) ~ log(c1995$rprice), data = c1995)
coeftest(OLS_model, vcov. = vcovHC, type = "HC1")
summary(cig_s1)$coef
summary(cig_s1)$coef['Estimate']
summary(cig_s1)$coef$Estimate
cig_ivreg <- ivreg(log_packs ~ log_rprice | salestax, data = c1995)
coeftest(cig_ivreg, vcov = vcovHC, type = "HC1")
coeftest(cig_s1, vcov = vcovHC, type = "HC1")
library(readxl)
library(quantmod)
setwd("~/Dropbox/Econometrics/R Emprical Analysis/class demo/project 2")
USMacroSWQ <- read_xlsx("us_macro_quarterly.xlsx", sheet = 1,col_types = c("text", rep("numeric", 9)))
head(USMacroSWQ)
USMacroSWQ <- read_xlsx("us_macro_quarterly.xlsx")
head(USMacroSWQ)
USMacroSWQ <- read_xlsx("us_macro_quarterly.xlsx", sheet = 1,col_types = c("text", rep("numeric", 9)))
head(USMacroSWQ)
USMacroSWQ <- read_xlsx("us_macro_quarterly.xlsx")
head(USMacroSWQ)
USMacroSWQ$...1 <- as.yearqtr(USMacroSWQ$...1, format = "%Y:0%q")
head(USMacroSWQ)
head(USMacroSWQ)
USMacroSWQ <- read_xlsx("us_macro_quarterly.xlsx")
head(USMacroSWQ)
USMacroSWQ <- read_xlsx("us_macro_quarterly.xlsx")
head(USMacroSWQ)
USMacroSWQ$...1 <- as.yearqtr(USMacroSWQ$...1, format = "%Y:0%q")
USMacroSWQ$...1 <- as.yearqtr(USMacroSWQ$...1, format = "%Y:0%q")
head(USMacroSWQ)
colnames(USMacroSWQ) <- c("Date", "GDPC96", "JAPAN_IP", "PCECTPI",
"GS10", "GS1", "TB3MS", "UNRATE", "EXUSUK", "CPIAUCSL")
head(USMacroSWQ)
GDP <- xts(USMacroSWQ$GDPC96, USMacroSWQ$Date)["1960::2013"]
head(GDP)
df1 = data.frame(CustomerId = c(1:6), Product = c(rep("Toaster", 3), rep("Radio", 3)))
df2 = data.frame(CustomerId = c(2, 4, 6), State = c(rep("Alabama", 2), rep("Ohio", 1)))
head(df1)
head(df2)
merge(df1, df2)
merge(x = df1, y = df2, by = "CustomerId", all = TRUE)
merge(x = df1, y = df2, by = NULL)
df1 = data.frame(CustomerId = c(1:6), Product = c(rep("Toaster", 3), rep("Radio", 3)))
df2 = data.frame(CustomerId = c(2, 4, 6), State = c(rep("Alabama", 2), rep("Ohio", 1)))
df1
df2
merge(df1, df2)
merge(x = df1, y = df2, by = "CustomerId", all = TRUE)
merge(x = df1, y = df2, by = "CustomerId", all.x = TRUE)
df1
df2
merge(x = df1, y = df2, by = "CustomerId", all.y = TRUE)
Mean_FatalRate_EF
Mean_Beertax_EF = aggregate(Fatalities$beertax, by=list(Fatalities$state), FUN=mean)
Mean_Beertax_EF
head(Fatalities)
colnames(Mean_Beertax_EF) <- c("state", "beertax_Mean_i")
head(Mean_Beertax_EF)
colnames(Mean_Beertax_EF) <- c("state", "beertax_Mean_i")
colnames(Mean_FatalRate_EF) <- c("state", "fatal_rate_Mean_i")
head(Mean_FatalRate_EF)
head(Mean_Beertax_EF)
head(Mean_FatalRate_EF)
merge(x = Fatalities, y = Mean_Beertax_EF, by = "state", all.x = TRUE)
merge(x = Fatalities, y = Mean_FatalRate_EF, by = "state", all.x = TRUE)
head(Fatalities)
Fatalities <- Fatalities['state', 'year', 'fatal_rate', 'beertax' ]
Fatalities['state' ]
Fatalities['state', 'year']
Fatalities[,c('state', 'year', 'fatal_rate', 'beertax') ]
Fatalities <- Fatalities[,c('state', 'year', 'fatal_rate', 'beertax') ]
head(Fatalities)
head(Fatalities)
Fatalities$fatal_rate <- Fatalities$fatal / Fatalities$pop * 10000
head(Fatalities)
Mean_Beertax_EF = aggregate(Fatalities$beertax, by=list(Fatalities$state), FUN=mean)
Mean_FatalRate_EF = aggregate(Fatalities$fatal_rate, by=list(Fatalities$state), FUN=mean)
head(Mean_Beertax_EF)
head(Mean_FatalRate_EF)
colnames(Mean_Beertax_EF) <- c("state", "beertax_Mean_i")
colnames(Mean_FatalRate_EF) <- c("state", "fatal_rate_Mean_i")
head(Fatalities)
Fatalities <- with(merge(x = Fatalities, y = Mean_Beertax_EF, by = "state", all.x = TRUE), beertax- Mean_Beertax_EF)
head(Fatalities)
head(Fatalities)
data(Fatalities)
head(Fatalities)
Fatalities <- Fatalities[ ,c('state', 'year', 'fatal_rate', 'beertax') ]
head(Fatalities)
head(Fatalities)
Fatalities <- Fatalities[ ,c('state', 'year', 'fatal_rate', 'beertax') ]
Fatalities$fatal_rate <- Fatalities$fatal / Fatalities$pop * 10000
Fatalities <- Fatalities[ ,c('state', 'year', 'fatal_rate', 'beertax') ]
head(Fatalities)
Fatalities_Entity_Demean <- with(merge(x = Fatalities, y = Mean_Beertax_EF, by = "state", all.x = TRUE), beertax - fatal_rate_Mean_i)
merge(x = Fatalities, y = Mean_Beertax_EF, by = "state", all.x = TRUE)
# left join the original Fatalities sets and Mean_Beertax_EF, Mean_FatalRate_EF respectively
Fatalities_Entity_Demean <- with(merge(x = Fatalities, y = Mean_Beertax_EF,
by = "state", all.x = TRUE), beertax - beertax_Mean_i)
head(Fatalities_Entity_Demean)
Fatalities$beertax_E_demeaned <- with(merge(x = Fatalities, y = Mean_Beertax_EF,
by = "state", all.x = TRUE), beertax - beertax_Mean_i)
head(Fatalities)
Fatalities1 <- merge(x = Fatalities, y = Mean_Beertax_EF, by = "state", all.x = TRUE)
head(Fatalities1)
Fatalities1['beertax']-Fatalities1['beertax_Mean_i']
Fatalities$fatal_rate_E_demeaned <- with( merge(x = Fatalities, y = Mean_FatalRate_EF, by = "state", all.x = TRUE),
fatal_rate - fatal_rate_Mean_i )
head(Fatalities)
head(Fatalities)
summary(Panel_Data_Reg_Model)
coeftest(Panel_Data_Reg_Model, vcov. = vcovHC, type = "const")
Panel_Data_Reg_Model = lm(fatal_rate_E_demeaned ~ beertax_E_demeaned, data = Fatalities)
summary(Panel_Data_Reg_Model)
coeftest(Panel_Data_Reg_Model, vcov. = vcovHC, type = "const")
plot( Fatalities$beertax , Fatalities$fatal_rate)
abline(OLS_model, col = 'red', lwd = 1.5)
OLS_model
abline(OLS_model, col = 'red', lwd = 1.5)
abline(OLS_model, lwd = 1.5)
OLS_model <- lm(fatal_rate~beertax, data = Fatalities)
summary(OLS_model)
coeftest(OLS_model, vcov. = vcovHC, type = "const")
coeftest(OLS_model, vcov. = vcovHC, type = "HC0")
coeftest(OLS_model, vcov. = vcovHC, type = "HC1")
plot( Fatalities$beertax , Fatalities$fatal_rate)
abline(OLS_model, lwd = 1.5)
plot( Fatalities$beertax , Fatalities$fatal_rate,
xlab = "Beer tax",
ylab = "Fatality rate (fatalities per 10000)",
main = "Traffic Fatality Rates and Beer Taxes",
ylim = c(0, 4.5),
pch = 20,
col = "steelblue")
)
abline(OLS_model, lwd = 1.5, col = 'red' )
plot( Fatalities$beertax , Fatalities$fatal_rate,
xlab = "Beer tax",
ylab = "Fatality rate",
main = "Traffic Fatality Rates and Beer Taxes",
ylim = c(0, 5),
pch = 20,
col = "steelblue")
)
# Plot the Non-Linear Regression Line and the Data
plot(CASchools$income, y)
lines(x = X_new[,2], y = Y_predict, col='red')
library(readxl)
library(quantmod)
setwd("~/Dropbox/Econometrics/R Emprical Analysis/class demo/project 2")
USMacroSWQ <- read_xlsx("us_macro_quarterly.xlsx")
data(USMacroSWQ)
head(USMacroSWQ)
USMacroSWQ$...1 <- as.yearqtr(USMacroSWQ$...1, format = "%Y:0%q")
colnames(USMacroSWQ) <- c("Date", "GDPC96", "JAPAN_IP", "PCECTPI",
"GS10", "GS1", "TB3MS", "UNRATE", "EXUSUK", "CPIAUCSL")
GDP <- xts(USMacroSWQ$GDPC96, USMacroSWQ$Date)["1960::2013"]
head(GDP)
# GDP series as xts object
GDP <- xts(USMacroSWQ$GDPC96, USMacroSWQ$Date)["1960::2013"]
head(GDP)
# GDP growth series as xts object
GDPGrowth <- xts(400 * log(GDP/lag(GDP)))
head(GDP)
ar.ols(GDPGRSub, order.max = 1, demean = F, intercept = T)
# GDP series as xts object
GDP <- xts(USMacroSWQ$GDPC96, USMacroSWQ$Date)["1960::2013"]
head(GDP)
# GDP growth series as xts object
GDPGrowth <- xts(400 * log(GDP/lag(GDP)))
GDPGRSub <- GDPGrowth["1962::2012"]
head(GDPGRSub)
#use ar.ols() command
# report the outcome with standard errors and significant level
ar.ols(GDPGRSub, order.max = 1, demean = F, intercept = T)
head(GDPGRSub)
head(USMacroSWQ)
head(USMacroSWQ)
head(USMacroSWQ)
#Since I prefer data frame data structure in R, so I will convert the dtibble further to data frame:
df = data.frame(USMacroSWQ)
# this is what data frame looks like. Simmilar to tibble.
head(df)
GDP <- USMacroSWQ['Date','GDPC96']
head(GDP)
USMacroSWQ['Date','GDPC96']
df['Date','GDPC96']
df[ ,c('Date','GDPC96')]
GDP <- df[ ,c('Date','GDPC96')]
USMacroSWQ <- read_xlsx("us_macro_quarterly.xlsx")
df = data.frame(USMacroSWQ)
data(USMacroSWQ)
USMacroSWQ
df = data.frame(USMacroSWQ)
setwd("~/Dropbox/Econometrics/R Emprical Analysis/class demo/project 2")
USMacroSWQ <- read_xlsx("us_macro_quarterly.xlsx")
df = data.frame(USMacroSWQ)
head(USMacroSWQ)
head(df)
USMacroSWQ = data.frame(USMacroSWQ)
USMacroSWQ$...1 <- as.yearqtr(USMacroSWQ$...1, format = "%Y:0%q")
colnames(USMacroSWQ) <- c("Date", "GDPC96", "JAPAN_IP", "PCECTPI",
"GS10", "GS1", "TB3MS", "UNRATE", "EXUSUK", "CPIAUCSL")
head(USMacroSWQ)
USMacroSWQ <- read_xlsx("us_macro_quarterly.xlsx")
df = data.frame(USMacroSWQ)
data(USMacroSWQ)
USMacroSWQ$...1 <- as.yearqtr(USMacroSWQ$...1, format = "%Y:0%q")
df$...1 <- as.yearqtr(USMacroSWQ$...1, format = "%Y:0%q")
df$...1 <- as.yearqtr(df$...1, format = "%Y:0%q")
head(df)
USMacroSWQ <- read_xlsx("us_macro_quarterly.xlsx")
df = data.frame(USMacroSWQ)
# format date column
USMacroSWQ$...1 <- as.yearqtr(USMacroSWQ$...1, format = "%Y:0%q")
df$...1 <- as.yearqtr(df$...1, format = "%Y:0%q")
head(df)
head(USMacroSWQ)
colnames(USMacroSWQ) <- c("Date", "GDPC96", "JAPAN_IP", "PCECTPI",
"GS10", "GS1", "TB3MS", "UNRATE", "EXUSUK", "CPIAUCSL")
colnames(df) <- c("Date", "GDPC96", "JAPAN_IP", "PCECTPI",
"GS10", "GS1", "TB3MS", "UNRATE", "EXUSUK", "CPIAUCSL")
head(df)
head(USMacroSWQ)
USMacroSWQ[,c('Date','GDPC96')]
GDP_df <- df[,c('Date','GDPC96')]
GDPtibble <-USMacroSWQ[,c('Date','GDPC96')]
GDP_df
head(GDPtibble)
head(GDP_df)
head(GDPtibble)
GDP_df
GDP <- xts(GDP_df$GDPC96, GDP_df$Date)["1960::2013"]
head(GDP)
head(GDP_df)
type(GDP_df)
Intercept = 2.7
beta1 = 0.7
E_Y = Intercept/(1-beta1)
round(E_Y, digits = 2)
Intercept = 2.7
beta1 = 0.7
E_Y = Intercept/(1-beta1)
round(E_Y, digits = 2)
Var_u = 9
Var_Y = Var_u/(1-beta1)
round(Var_Y, digits = 2)
Intercept = 2.7
beta1 = 0.7
E_Y = Intercept + Intercept*beta1/(1-beta1)
round(E_Y, digits = 2)
Var_u = 9
Var_Y = Var_u/(1-beta1)
round(Var_Y, digits = 2)
Intercept = 2.7
beta1 = 0.7
E_Y = Intercept + Intercept*beta1/(1-beta1)
round(E_Y, digits = 2)
Var_u = 9
Var_Y = Var_u/(1-beta1)
round(Var_Y, digits = 2)
Intercept = 2.7
beta1 = 0.7
E_Y =  + Intercept/(1-beta1)
round(E_Y, digits = 2)
Var_u = 9
Var_Y = Var_u/(1-beta1^2)
round(Var_Y, digits = 2)
Intercept = 2.7
beta1 = 0.7
Cov_Y_lag1 =  beta1
round(Cov_Y_lag1, digits = 2)
Intercept = 2.7
beta1 = 0.7
Cov_Y_lag1 =  beta1*Var_Y
round(Cov_Y_lag1, digits = 3)
Cov_Y_lag2 =  beta1^2*Var_Y
round(Cov_Y_lag1, digits = 3)
Cov_Y_lag2 =  beta1^2*Var_Y
round(Cov_Y_lag2, digits = 3)
Corr_Y_lag1 =  Cov_Y_lag1/sqrt(Var_Y*Var_Y  )
round(Corr_Y_lag1, digits = 3)
Corr_Y_lag2 =  Cov_Y_lag2/sqrt(Var_Y*Var_Y  )
round(Corr_Y_lag2, digits = 3)
Y_curr = 102.8
E_Y_next = Intercept + beta1*Y_curr
round(Corr_Y_lag2, digits = 2)
Y_curr = 102.8
E_Y_next = Intercept + beta1*Y_curr
round(E_Y_next, digits = 2)
delta_hat = 0.0085
sd_delta = 0.0044
delta_null = 0
t_stat =  (delta_hat-delta_null)/sd_delta
round(t_stat, digits = 2)
delta_hat = -0.0085
sd_delta = 0.0044
delta_null = 0
t_stat =  (delta_hat-delta_null)/sd_delta
round(t_stat, digits = 2)
